<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nest</name>
    </assembly>
    <members>
        <member name="T:Nest.GeoIndexedShapeVector">
            <summary>
            An object to describe a geoshape vetor
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-filter.html
            </summary>
        </member>
        <member name="T:Nest.GeoShapeVector">
            <summary>
            An object to describe a geoshape vetor
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-filter.html
            </summary>
        </member>
        <member name="T:Nest.TermsLookupFilterDescriptor">
            <summary>
            http://www.elasticsearch.org/blog/terms-filter-lookup/
            </summary>
        </member>
        <member name="M:Nest.TermsLookupFilterDescriptor.Type(System.String)">
            <summary>
            If not specified will use the default typename for the type specified on Lookup&lt;T&gt;
            </summary>
        </member>
        <member name="M:Nest.TermsLookupFilterDescriptor.Index(System.String)">
            <summary>
            If not specified will use the default index for the type specified on Lookup&lt;T&gt;
            </summary>
        </member>
        <member name="M:Nest.TermsLookupFilterDescriptor.Routing(System.String)">
            <summary>
            A custom routing value to be used when retrieving the external terms doc.
            </summary>
        </member>
        <member name="T:Nest.DynamicMappingOption">
            <summary>
            Controls how elasticsearch handles dynamic mapping changes when a new document present new fields
            </summary>
        </member>
        <member name="F:Nest.DynamicMappingOption.allow">
            <summary>
            Default value, allows unmapped fields to be cause a mapping update 
            </summary>
        </member>
        <member name="F:Nest.DynamicMappingOption.ignore">
            <summary>
            New unmapped fields will be silently ignored
            </summary>
        </member>
        <member name="F:Nest.DynamicMappingOption.strict">
            <summary>
            If new unmapped fields are passed, the whole document WON'T be added/updated
            </summary>
        </member>
        <member name="M:Nest.ElasticSerializer.ToParsedResponse``1(Nest.ConnectionStatus,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            Returns a response of type R based on the connection status by trying parsing status.Result into R
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticSerializer.Serialize(System.Object,Newtonsoft.Json.Formatting)">
            <summary>
            serialize an object using the internal registered converters without camelcasing properties as is done 
            while indexing objects
            </summary>
        </member>
        <member name="M:Nest.ElasticSerializer.Deserialize``1(System.Object,System.Collections.Generic.IList{Newtonsoft.Json.JsonConverter},System.Boolean)">
            <summary>
            Deserialize an object 
            </summary>
            <param name="notFoundIsValid">When deserializing a ConnectionStatus to a BaseResponse type this controls whether a 404 is a valid response</param>
        </member>
        <member name="T:Nest.JsonConverterPiggyBackState">
            <summary>
            Registerering global jsonconverters is very costly,
            The best thing is to specify them as a contract (see ElasticContractResolver)
            This however prevents a way to give a jsonconverter state which for some calls is needed i.e:
            A multiget and multisearch need access to the descriptor that describes what types are used.
            When NEST knows it has to piggyback this it has to pass serialization state it will create a new 
            serializersettings object with a new contract resolver which holds this state. Its ugly but it does boost
            massive performance gains.
            </summary>
        </member>
        <member name="T:Nest.FluentQueryString`1">
            <summary>
            Used by the raw client to compose querystring parameters in a matter that still exposes some xmldocs
            You can always pass a simple NameValueCollection if you want.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Nest.BulkPostQueryString">
            <summary>Query string descriptor for BulkPost
            <pre>
            http://elasticsearch.org/guide/reference/api/bulk/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.BulkPostQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.BulkPostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.BulkPostQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Explicitely set the replication type</summary>
        </member>
        <member name="M:Nest.BulkPostQueryString.Type(System.String)">
            <summary>Default document type for items which don&#39;t provide one</summary>
        </member>
        <member name="M:Nest.BulkPostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="T:Nest.BulkPutQueryString">
            <summary>Query string descriptor for BulkPut
            <pre>
            http://elasticsearch.org/guide/reference/api/bulk/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.BulkPutQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.BulkPutQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.BulkPutQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Explicitely set the replication type</summary>
        </member>
        <member name="M:Nest.BulkPutQueryString.Type(System.String)">
            <summary>Default document type for items which don&#39;t provide one</summary>
        </member>
        <member name="M:Nest.BulkPutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="T:Nest.ClusterHealthGetQueryString">
            <summary>Query string descriptor for ClusterHealthGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-health/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.Level(Nest.LevelOptions)">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.MasterTimeout(System.String)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.WaitForActiveShards(System.Int32)">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.WaitForNodes(System.String)">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.WaitForRelocatingShards(System.Int32)">
            <summary>Wait until the specified number of relocating shards is finished</summary>
        </member>
        <member name="M:Nest.ClusterHealthGetQueryString.WaitForStatus(Nest.WaitForStatusOptions)">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="T:Nest.ClusterNodeHotThreadsGetQueryString">
            <summary>Query string descriptor for ClusterNodeHotThreadsGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterNodeHotThreadsGetQueryString.Interval(System.String)">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="M:Nest.ClusterNodeHotThreadsGetQueryString.Snapshots(System.Int32)">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="M:Nest.ClusterNodeHotThreadsGetQueryString.Threads(System.Int32)">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="M:Nest.ClusterNodeHotThreadsGetQueryString.Type(Nest.TypeOptions)">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="T:Nest.ClusterNodeInfoGetQueryString">
            <summary>Query string descriptor for ClusterNodeInfoGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.All(System.Boolean)">
            <summary>Return all available information</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Clear(System.Boolean)">
            <summary>Reset the default settings</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Http(System.Boolean)">
            <summary>Return information about HTTP</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Jvm(System.Boolean)">
            <summary>Return information about the JVM</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Network(System.Boolean)">
            <summary>Return information about network</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Os(System.Boolean)">
            <summary>Return information about the operating system</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Plugin(System.Boolean)">
            <summary>Return information about plugins</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Process(System.Boolean)">
            <summary>Return information about the Elasticsearch process</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Settings(System.Boolean)">
            <summary>Return information about node settings</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.ThreadPool(System.Boolean)">
            <summary>Return information about the thread pool</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterNodeInfoGetQueryString.Transport(System.Boolean)">
            <summary>Return information about transport</summary>
        </member>
        <member name="T:Nest.ClusterNodeShutdownPostQueryString">
            <summary>Query string descriptor for ClusterNodeShutdownPost
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterNodeShutdownPostQueryString.Delay(System.String)">
            <summary>Set the delay for the operation (default: 1s)</summary>
        </member>
        <member name="M:Nest.ClusterNodeShutdownPostQueryString.Exit(System.Boolean)">
            <summary>Exit the JVM as well (default: true)</summary>
        </member>
        <member name="T:Nest.ClusterNodeStatsGetQueryString">
            <summary>Query string descriptor for ClusterNodeStatsGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.All(System.Boolean)">
            <summary>Return all available information</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Clear(System.Boolean)">
            <summary>Reset the default level of detail</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Fs(System.Boolean)">
            <summary>Return information about the filesystem</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Http(System.Boolean)">
            <summary>Return information about HTTP</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Indices(System.Boolean)">
            <summary>Return information about indices</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Jvm(System.Boolean)">
            <summary>Return information about the JVM</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Network(System.Boolean)">
            <summary>Return information about network</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Os(System.Boolean)">
            <summary>Return information about the operating system</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Process(System.Boolean)">
            <summary>Return information about the Elasticsearch process</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.ThreadPool(System.Boolean)">
            <summary>Return information about the thread pool</summary>
        </member>
        <member name="M:Nest.ClusterNodeStatsGetQueryString.Transport(System.Boolean)">
            <summary>Return information about transport</summary>
        </member>
        <member name="T:Nest.ClusterReroutePostQueryString">
            <summary>Query string descriptor for ClusterReroutePost
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterReroutePostQueryString.DryRun(System.Boolean)">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="M:Nest.ClusterReroutePostQueryString.FilterMetadata(System.Boolean)">
            <summary>Don&#39;t return cluster state metadata (default: false)</summary>
        </member>
        <member name="T:Nest.ClusterStateGetQueryString">
            <summary>Query string descriptor for ClusterStateGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-cluster-state/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterBlocks(System.Boolean)">
            <summary>Do not return information about blocks</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterIndexTemplates(System.Boolean)">
            <summary>Do not return information about index templates</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterIndices(System.String[])">
            <summary>Limit returned metadata information to specific indices</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterMetadata(System.Boolean)">
            <summary>Do not return information about indices metadata</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterNodes(System.Boolean)">
            <summary>Do not return information about nodes</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.FilterRoutingTable(System.Boolean)">
            <summary>Do not return information about shard allocation (`routing_table` and `routing_nodes`)</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStateGetQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.CountPostQueryString">
            <summary>Query string descriptor for CountPost
            <pre>
            http://elasticsearch.org/guide/reference/api/count/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.CountPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.CountPostQueryString.MinScore(System.Int32)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Nest.CountPostQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.CountPostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CountPostQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="T:Nest.CountGetQueryString">
            <summary>Query string descriptor for CountGet
            <pre>
            http://elasticsearch.org/guide/reference/api/count/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.CountGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.CountGetQueryString.MinScore(System.Int32)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Nest.CountGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.CountGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CountGetQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="T:Nest.CreatePostQueryString">
            <summary>Query string descriptor for CreatePost
            <pre>
            http://elasticsearch.org/guide/reference/api/index_/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Id(System.String)">
            <summary>Specific document ID (when the POST method is used)</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Percolate(System.String)">
            <summary>Percolator queries to execute while indexing the document</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Timestamp(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Ttl(System.String)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.CreatePostQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.CreatePutQueryString">
            <summary>Query string descriptor for CreatePut
            <pre>
            http://elasticsearch.org/guide/reference/api/index_/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Id(System.String)">
            <summary>Specific document ID (when the POST method is used)</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Percolate(System.String)">
            <summary>Percolator queries to execute while indexing the document</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Timestamp(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Ttl(System.String)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.CreatePutQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.DeleteDeleteQueryString">
            <summary>Query string descriptor for Delete
            <pre>
            http://elasticsearch.org/guide/reference/api/delete/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Specific write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Parent(System.String)">
            <summary>ID of parent document</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DeleteDeleteQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.DeleteByQueryDeleteQueryString">
            <summary>Query string descriptor for DeleteByQuery
            <pre>
            http://www.elasticsearch.org/guide/reference/api/delete-by-query/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Specific write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.DefaultOperator(Nest.DefaultOperatorOptions)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDeleteQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="T:Nest.ExistsHeadQueryString">
            <summary>Query string descriptor for ExistsHead
            <pre>
            http://elasticsearch.org/guide/reference/api/get/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ExistsHeadQueryString.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.ExistsHeadQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.ExistsHeadQueryString.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.ExistsHeadQueryString.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.ExistsHeadQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="T:Nest.ExplainGetQueryString">
            <summary>Query string descriptor for ExplainGet
            <pre>
            http://elasticsearch.org/guide/reference/api/explain/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Analyzer(System.String)">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.DefaultOperator(Nest.DefaultOperatorOptions)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Df(System.String)">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainGetQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="T:Nest.ExplainPostQueryString">
            <summary>Query string descriptor for ExplainPost
            <pre>
            http://elasticsearch.org/guide/reference/api/explain/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Analyzer(System.String)">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.DefaultOperator(Nest.DefaultOperatorOptions)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Df(System.String)">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainPostQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="T:Nest.GetGetQueryString">
            <summary>Query string descriptor for Get
            <pre>
            http://elasticsearch.org/guide/reference/api/get/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetGetQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="T:Nest.GetSourceGetQueryString">
            <summary>Query string descriptor for GetSource
            <pre>
            http://elasticsearch.org/guide/reference/api/get/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Exclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Include(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.GetSourceGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="T:Nest.IndexPostQueryString">
            <summary>Query string descriptor for IndexPost
            <pre>
            http://elasticsearch.org/guide/reference/api/index_/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.OpType(Nest.OpTypeOptions)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Percolate(System.String)">
            <summary>Percolator queries to execute while indexing the document</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Timestamp(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Ttl(System.String)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.IndexPostQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.IndexPutQueryString">
            <summary>Query string descriptor for IndexPut
            <pre>
            http://elasticsearch.org/guide/reference/api/index_/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.OpType(Nest.OpTypeOptions)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Percolate(System.String)">
            <summary>Percolator queries to execute while indexing the document</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Timestamp(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Ttl(System.String)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.IndexPutQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.IndicesAnalyzeGetQueryString">
            <summary>Query string descriptor for IndicesAnalyzeGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Analyzer(System.String)">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Field(System.String)">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Filters(System.String[])">
            <summary>A comma-separated list of filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Index(System.String)">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Text(System.String)">
            <summary>The text on which the analysis should be performed (when request body is not used)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Tokenizer(System.String)">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzeGetQueryString.Format(Nest.FormatOptions)">
            <summary>Format of the output</summary>
        </member>
        <member name="T:Nest.IndicesAnalyzePostQueryString">
            <summary>Query string descriptor for IndicesAnalyzePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Analyzer(System.String)">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Field(System.String)">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Filters(System.String[])">
            <summary>A comma-separated list of filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Index(System.String)">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Text(System.String)">
            <summary>The text on which the analysis should be performed (when request body is not used)</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Tokenizer(System.String)">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="M:Nest.IndicesAnalyzePostQueryString.Format(Nest.FormatOptions)">
            <summary>Format of the output</summary>
        </member>
        <member name="T:Nest.IndicesClearCachePostQueryString">
            <summary>Query string descriptor for IndicesClearCachePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.FieldData(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Fielddata(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Filter(System.Boolean)">
            <summary>Clear filter caches</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.FilterCache(System.Boolean)">
            <summary>Clear filter caches</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.FilterKeys(System.Boolean)">
            <summary>A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Id(System.Boolean)">
            <summary>Clear ID caches for parent/child</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.IdCache(System.Boolean)">
            <summary>Clear ID caches for parent/child</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Index(System.String[])">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.IndicesClearCachePostQueryString.Recycler(System.Boolean)">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="T:Nest.IndicesClearCacheGetQueryString">
            <summary>Query string descriptor for IndicesClearCacheGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.FieldData(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Fielddata(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Filter(System.Boolean)">
            <summary>Clear filter caches</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.FilterCache(System.Boolean)">
            <summary>Clear filter caches</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.FilterKeys(System.Boolean)">
            <summary>A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Id(System.Boolean)">
            <summary>Clear ID caches for parent/child</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.IdCache(System.Boolean)">
            <summary>Clear ID caches for parent/child</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Index(System.String[])">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.IndicesClearCacheGetQueryString.Recycler(System.Boolean)">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="T:Nest.IndicesClosePostQueryString">
            <summary>Query string descriptor for IndicesClosePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesClosePostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesClosePostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesCreatePutQueryString">
            <summary>Query string descriptor for IndicesCreatePut
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesCreatePutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesCreatePutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesCreatePostQueryString">
            <summary>Query string descriptor for IndicesCreatePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesCreatePostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesCreatePostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesDeleteDeleteQueryString">
            <summary>Query string descriptor for IndicesDelete
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesDeleteDeleteQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesDeleteDeleteQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesDeleteAliasDeleteQueryString">
            <summary>Query string descriptor for IndicesDeleteAlias
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesDeleteAliasDeleteQueryString.Timeout(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndicesDeleteAliasDeleteQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesDeleteMappingDeleteQueryString">
            <summary>Query string descriptor for IndicesDeleteMapping
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesDeleteMappingDeleteQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesDeleteTemplateDeleteQueryString">
            <summary>Query string descriptor for IndicesDeleteTemplate
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesDeleteTemplateDeleteQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesDeleteTemplateDeleteQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesDeleteWarmerDeleteQueryString">
            <summary>Query string descriptor for IndicesDeleteWarmer
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesDeleteWarmerDeleteQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesExistsAliasHeadQueryString">
            <summary>Query string descriptor for IndicesExistsAliasHead
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesExistsAliasHeadQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="T:Nest.IndicesExistsTypeHeadQueryString">
            <summary>Query string descriptor for IndicesExistsTypeHead
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesExistsTypeHeadQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="T:Nest.IndicesFlushPostQueryString">
            <summary>Query string descriptor for IndicesFlushPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesFlushPostQueryString.Force(System.Boolean)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesFlushPostQueryString.Full(System.Boolean)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesFlushPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesFlushPostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="T:Nest.IndicesFlushGetQueryString">
            <summary>Query string descriptor for IndicesFlushGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesFlushGetQueryString.Force(System.Boolean)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesFlushGetQueryString.Full(System.Boolean)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesFlushGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesFlushGetQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="T:Nest.IndicesGetAliasGetQueryString">
            <summary>Query string descriptor for IndicesGetAlias
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesGetAliasGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="T:Nest.IndicesGetAliasesGetQueryString">
            <summary>Query string descriptor for IndicesGetAliases
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesGetAliasesGetQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="T:Nest.IndicesGetFieldMappingGetQueryString">
            <summary>Query string descriptor for IndicesGetFieldMapping
            <pre>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesGetFieldMappingGetQueryString.IncludeDefaults(System.Boolean)">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="T:Nest.IndicesOpenPostQueryString">
            <summary>Query string descriptor for IndicesOpenPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesOpenPostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesOpenPostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesOptimizePostQueryString">
            <summary>Query string descriptor for IndicesOptimizePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.MaxNumSegments(System.Int32)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.Refresh(System.Boolean)">
            <summary>Specify whether the index should be refreshed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizePostQueryString.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="T:Nest.IndicesOptimizeGetQueryString">
            <summary>Query string descriptor for IndicesOptimizeGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.MaxNumSegments(System.Int32)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.Refresh(System.Boolean)">
            <summary>Specify whether the index should be refreshed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.IndicesOptimizeGetQueryString.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="T:Nest.IndicesPutAliasPutQueryString">
            <summary>Query string descriptor for IndexPutAlias
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutAliasPutQueryString.Timeout(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndicesPutAliasPutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutMappingPutQueryString">
            <summary>Query string descriptor for IndicesPutMapping
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPutQueryString.IgnoreConflicts(System.Boolean)">
            <summary>Specify whether to ignore conflicts while updating the mapping (default: false)</summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutMappingPostQueryString">
            <summary>Query string descriptor for IndicesPutMappingPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPostQueryString.IgnoreConflicts(System.Boolean)">
            <summary>Specify whether to ignore conflicts while updating the mapping (default: false)</summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesPutMappingPostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutSettingsPutQueryString">
            <summary>Query string descriptor for IndicesPutSettings
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutSettingsPutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutTemplatePutQueryString">
            <summary>Query string descriptor for IndicesPutTemplate
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePutQueryString.Order(System.Int32)">
            <summary>The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)</summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePutQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutTemplatePostQueryString">
            <summary>Query string descriptor for IndicesPutTemplatePost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePostQueryString.Order(System.Int32)">
            <summary>The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)</summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndicesPutTemplatePostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesPutWarmerPutQueryString">
            <summary>Query string descriptor for IndicesPutWarmer
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesPutWarmerPutQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesRefreshPostQueryString">
            <summary>Query string descriptor for IndicesRefreshPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesRefreshPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesRefreshPostQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="T:Nest.IndicesRefreshGetQueryString">
            <summary>Query string descriptor for IndicesRefreshGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesRefreshGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesRefreshGetQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="T:Nest.IndicesSegmentsGetQueryString">
            <summary>Query string descriptor for IndicesSegmentsGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-indices-segments/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesSegmentsGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesSegmentsGetQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="T:Nest.IndicesSnapshotIndexPostQueryString">
            <summary>Query string descriptor for IndicesSnapshotIndexPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesSnapshotIndexPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="T:Nest.IndicesStatsGetQueryString">
            <summary>Query string descriptor for IndicesStatsGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-indices-stats/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.All(System.Boolean)">
            <summary>Return all available information</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Clear(System.Boolean)">
            <summary>Reset the default level of detail</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Completion(System.Boolean)">
            <summary>Return information about completion suggester stats</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `completion` metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Docs(System.Boolean)">
            <summary>Return information about indexed and deleted documents</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Fielddata(System.Boolean)">
            <summary>Return information about field data</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.FilterCache(System.Boolean)">
            <summary>Return information about filter cache</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Flush(System.Boolean)">
            <summary>Return information about flush operations</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Get(System.Boolean)">
            <summary>Return information about get operations</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Groups(System.Boolean)">
            <summary>A comma-separated list of search groups for `search` statistics</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.IdCache(System.Boolean)">
            <summary>Return information about ID cache</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Indexing(System.Boolean)">
            <summary>Return information about indexing operations</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Merge(System.Boolean)">
            <summary>Return information about merge operations</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Refresh(System.Boolean)">
            <summary>Return information about refresh operations</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Search(System.Boolean)">
            <summary>Return information about search operations; use the `groups` parameter to include information for specific search groups</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Store(System.Boolean)">
            <summary>Return information about the size of the index</summary>
        </member>
        <member name="M:Nest.IndicesStatsGetQueryString.Warmer(System.Boolean)">
            <summary>Return information about warmers</summary>
        </member>
        <member name="T:Nest.IndicesStatusGetQueryString">
            <summary>Query string descriptor for IndicesStatusGet
            <pre>
            http://elasticsearch.org/guide/reference/api/admin-indices-status/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesStatusGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesStatusGetQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesStatusGetQueryString.Recovery(System.Boolean)">
            <summary>Return information about shard recovery</summary>
        </member>
        <member name="M:Nest.IndicesStatusGetQueryString.Snapshot(System.Boolean)">
            <summary>TODO: ?</summary>
        </member>
        <member name="T:Nest.IndicesUpdateAliasesPostQueryString">
            <summary>Query string descriptor for IndicesUpdateAliasesPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesUpdateAliasesPostQueryString.Timeout(System.String)">
            <summary>Request timeout</summary>
        </member>
        <member name="M:Nest.IndicesUpdateAliasesPostQueryString.MasterTimeout(System.String)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="T:Nest.IndicesValidateQueryGetQueryString">
            <summary>Query string descriptor for IndicesValidateQueryGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/validate/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryGetQueryString.Explain(System.Boolean)">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryGetQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryGetQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryGetQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="T:Nest.IndicesValidateQueryPostQueryString">
            <summary>Query string descriptor for IndicesValidateQueryPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/validate/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryPostQueryString.Explain(System.Boolean)">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryPostQueryString.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryPostQueryString.Source(System.String)">
            <summary>The URL-encoded query definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.IndicesValidateQueryPostQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="T:Nest.MgetGetQueryString">
            <summary>Query string descriptor for MgetGet
            <pre>
            http://elasticsearch.org/guide/reference/api/multi-get/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MgetGetQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="T:Nest.MgetPostQueryString">
            <summary>Query string descriptor for MgetPost
            <pre>
            http://elasticsearch.org/guide/reference/api/multi-get/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MgetPostQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="T:Nest.MltGetQueryString">
            <summary>Query string descriptor for MltGet
            <pre>
            http://elasticsearch.org/guide/reference/api/more-like-this/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MltGetQueryString.BoostTerms(System.Int32)">
            <summary>The boost factor</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MaxDocFreq(System.Int32)">
            <summary>The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MaxQueryTerms(System.Int32)">
            <summary>The maximum query terms to be included in the generated query</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MaxWordLen(System.Int32)">
            <summary>The minimum length of the word: longer words will be ignored</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MinDocFreq(System.Int32)">
            <summary>The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MinTermFreq(System.Int32)">
            <summary>The term frequency as percent: terms with lower occurence in the source document will be ignored</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MinWordLen(System.Int32)">
            <summary>The minimum length of the word: shorter words will be ignored</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.MltFields(System.String[])">
            <summary>Specific fields to perform the query against</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.PercentTermsToMatch(System.Int32)">
            <summary>How many terms have to match in order to consider the document a match (default: 0.3)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchFrom(System.Int32)">
            <summary>The offset from which to return results</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchIndices(System.String[])">
            <summary>A comma-separated list of indices to perform the query against (default: the index containing the document)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchQueryHint(System.String)">
            <summary>The search query hint</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchScroll(System.String)">
            <summary>A scroll search request definition</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchSize(System.Int32)">
            <summary>The number of documents to return (default: 10)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchSource(System.String)">
            <summary>A specific search request definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchType(System.String)">
            <summary>Specific search type (eg. `dfs_then_fetch`, `count`, etc)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.SearchTypes(System.String[])">
            <summary>A comma-separated list of types to perform the query against (default: the same type as the document)</summary>
        </member>
        <member name="M:Nest.MltGetQueryString.StopWords(System.String[])">
            <summary>A list of stop words to be ignored</summary>
        </member>
        <member name="T:Nest.MltPostQueryString">
            <summary>Query string descriptor for MltPost
            <pre>
            http://elasticsearch.org/guide/reference/api/more-like-this/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MltPostQueryString.BoostTerms(System.Int32)">
            <summary>The boost factor</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MaxDocFreq(System.Int32)">
            <summary>The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MaxQueryTerms(System.Int32)">
            <summary>The maximum query terms to be included in the generated query</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MaxWordLen(System.Int32)">
            <summary>The minimum length of the word: longer words will be ignored</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MinDocFreq(System.Int32)">
            <summary>The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MinTermFreq(System.Int32)">
            <summary>The term frequency as percent: terms with lower occurence in the source document will be ignored</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MinWordLen(System.Int32)">
            <summary>The minimum length of the word: shorter words will be ignored</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.MltFields(System.String[])">
            <summary>Specific fields to perform the query against</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.PercentTermsToMatch(System.Int32)">
            <summary>How many terms have to match in order to consider the document a match (default: 0.3)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchFrom(System.Int32)">
            <summary>The offset from which to return results</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchIndices(System.String[])">
            <summary>A comma-separated list of indices to perform the query against (default: the index containing the document)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchQueryHint(System.String)">
            <summary>The search query hint</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchScroll(System.String)">
            <summary>A scroll search request definition</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchSize(System.Int32)">
            <summary>The number of documents to return (default: 10)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchSource(System.String)">
            <summary>A specific search request definition (instead of using the request body)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchType(System.String)">
            <summary>Specific search type (eg. `dfs_then_fetch`, `count`, etc)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.SearchTypes(System.String[])">
            <summary>A comma-separated list of types to perform the query against (default: the same type as the document)</summary>
        </member>
        <member name="M:Nest.MltPostQueryString.StopWords(System.String[])">
            <summary>A list of stop words to be ignored</summary>
        </member>
        <member name="T:Nest.MsearchGetQueryString">
            <summary>Query string descriptor for MsearchGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/multi-search/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MsearchGetQueryString.SearchType(Nest.SearchTypeOptions)">
            <summary>Search operation type</summary>
        </member>
        <member name="T:Nest.MsearchPostQueryString">
            <summary>Query string descriptor for MsearchPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/multi-search/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MsearchPostQueryString.SearchType(Nest.SearchTypeOptions)">
            <summary>Search operation type</summary>
        </member>
        <member name="T:Nest.PercolateGetQueryString">
            <summary>Query string descriptor for PercolateGet
            <pre>
            http://elasticsearch.org/guide/reference/api/percolate/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.PercolateGetQueryString.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="T:Nest.PercolatePostQueryString">
            <summary>Query string descriptor for PercolatePost
            <pre>
            http://elasticsearch.org/guide/reference/api/percolate/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.PercolatePostQueryString.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="T:Nest.ScrollGetQueryString">
            <summary>Query string descriptor for ScrollGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/search/scroll/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ScrollGetQueryString.Scroll(System.String)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.ScrollGetQueryString.ScrollId(System.String)">
            <summary>The scroll ID for scrolled search</summary>
        </member>
        <member name="T:Nest.ScrollPostQueryString">
            <summary>Query string descriptor for ScrollPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/search/scroll/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ScrollPostQueryString.Scroll(System.String)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.ScrollPostQueryString.ScrollId(System.String)">
            <summary>The scroll ID for scrolled search</summary>
        </member>
        <member name="T:Nest.SearchGetQueryString">
            <summary>Query string descriptor for SearchGet
            <pre>
            http://www.elasticsearch.org/guide/reference/api/search/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.DefaultOperator(Nest.DefaultOperatorOptions)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.From(System.Int32)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.IndicesBoost(System.String[])">
            <summary>Comma-separated list of index boosts</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Scroll(System.String)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SearchType(Nest.SearchTypeOptions)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Size(System.Int32)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Source(System.String)">
            <summary>The URL-encoded request definition using the Query DSL (instead of using request body)</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SuggestMode(Nest.SuggestModeOptions)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SuggestSize(System.Int32)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.SearchGetQueryString.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="T:Nest.SearchPostQueryString">
            <summary>Query string descriptor for SearchPost
            <pre>
            http://www.elasticsearch.org/guide/reference/api/search/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.DefaultOperator(Nest.DefaultOperatorOptions)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.From(System.Int32)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.IndicesBoost(System.String[])">
            <summary>Comma-separated list of index boosts</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Q(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Scroll(System.String)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SearchType(Nest.SearchTypeOptions)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Size(System.Int32)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Source(System.String)">
            <summary>The URL-encoded request definition using the Query DSL (instead of using request body)</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Source(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SuggestMode(Nest.SuggestModeOptions)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SuggestSize(System.Int32)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.SearchPostQueryString.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="T:Nest.SuggestPostQueryString">
            <summary>Query string descriptor for SuggestPost
            <pre>
            http://elasticsearch.org/guide/reference/api/search/suggest/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.SuggestPostQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.SuggestPostQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SuggestPostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SuggestPostQueryString.Source(System.String)">
            <summary>The URL-encoded request definition (instead of using request body)</summary>
        </member>
        <member name="T:Nest.SuggestGetQueryString">
            <summary>Query string descriptor for SuggestGet
            <pre>
            http://elasticsearch.org/guide/reference/api/search/suggest/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.SuggestGetQueryString.IgnoreIndices(Nest.IgnoreIndicesOptions)">
            <summary>When performed on multiple indices, allows to ignore `missing` ones</summary>
        </member>
        <member name="M:Nest.SuggestGetQueryString.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SuggestGetQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SuggestGetQueryString.Source(System.String)">
            <summary>The URL-encoded request definition (instead of using request body)</summary>
        </member>
        <member name="T:Nest.UpdatePostQueryString">
            <summary>Query string descriptor for UpdatePost
            <pre>
            http://elasticsearch.org/guide/reference/api/update/
            </pre>
            </summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Consistency(Nest.ConsistencyOptions)">
            <summary>Explicit write consistency setting for the operation</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the response</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Lang(System.String)">
            <summary>The script language (default: mvel)</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Percolate(System.String)">
            <summary>Perform percolation during the operation; use specific registered query name, attribute, or wildcard</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Refresh(System.Boolean)">
            <summary>Refresh the index after performing the operation</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Replication(Nest.ReplicationOptions)">
            <summary>Specific replication type</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.RetryOnConflict(System.Int32)">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Script(System.String)">
            <summary>The URL-encoded script definition (instead of using request body)</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Timeout(System.String)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Timestamp(System.String)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Ttl(System.String)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.Version(System.Int32)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.UpdatePostQueryString.VersionType(Nest.VersionTypeOptions)">
            <summary>Specific version type</summary>
        </member>
        <member name="T:Nest.RawElasticClient">
            <summary>
            Raw operations with elasticsearch
            </summary>
        </member>
        <member name="T:Nest.IRawElasticClient">
            <summary>
            Raw operations with elasticsearch
            <pre>
            This file is automatically generated from https://github.com/elasticsearch/elasticsearch-rest-api-spec
            </pre>
            <pre>
            Generated of commit 394e3e45e8
            </pre>
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPost(System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPostAsync(System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPost(System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPostAsync(System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPost(System.String,System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPostAsync(System.String,System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPut(System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPutAsync(System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPut(System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPutAsync(System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPut(System.String,System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.BulkPutAsync(System.String,System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClearScrollDelete(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>DELETE /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">A comma-separated list of scroll IDs to clear</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClearScrollDeleteAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>DELETE /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">A comma-separated list of scroll IDs to clear</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterGetSettings(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterGetSettingsAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterHealthGet(System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterHealthGetAsync(System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterHealthGet(System.String,System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health/{index}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterHealthGetAsync(System.String,System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health/{index}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeHotThreadsGet(System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeHotThreadsGetAsync(System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeHotThreadsGet(System.String,System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeHotThreadsGetAsync(System.String,System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeInfoGet(System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeInfoGetAsync(System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeInfoGet(System.String,System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeInfoGetAsync(System.String,System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeShutdownPost(System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeShutdownPostAsync(System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeShutdownPost(System.String,System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_cluster/nodes/{node_id}/_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you&#39;re connected to, leave empty to perform the operation on all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeShutdownPostAsync(System.String,System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_cluster/nodes/{node_id}/_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you&#39;re connected to, leave empty to perform the operation on all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(Nest.MetricFamilyOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(Nest.MetricFamilyOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(Nest.MetricFamilyOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(Nest.MetricFamilyOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(System.String,Nest.MetricOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(System.String,Nest.MetricOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGet(System.String,Nest.MetricOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterNodeStatsGetAsync(System.String,Nest.MetricOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterPutSettings(System.Object,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>PUT /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterPutSettingsAsync(System.Object,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>PUT /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterReroutePost(System.Object,System.Func{Nest.ClusterReroutePostQueryString,Nest.ClusterReroutePostQueryString})">
            <summary>POST /_cluster/reroute
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/</pre>	
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterReroutePostAsync(System.Object,System.Func{Nest.ClusterReroutePostQueryString,Nest.ClusterReroutePostQueryString})">
            <summary>POST /_cluster/reroute
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/</pre>	
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterStateGet(System.Func{Nest.ClusterStateGetQueryString,Nest.ClusterStateGetQueryString})">
            <summary>GET /_cluster/state
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-state/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.ClusterStateGetAsync(System.Func{Nest.ClusterStateGetQueryString,Nest.ClusterStateGetQueryString})">
            <summary>GET /_cluster/state
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-state/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPost(System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPostAsync(System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPost(System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPostAsync(System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPost(System.String,System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountPostAsync(System.String,System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGet(System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGetAsync(System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGet(System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGetAsync(System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGet(System.String,System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CountGetAsync(System.String,System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePost(System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePostAsync(System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePost(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePut(System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePutAsync(System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePut(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.CreatePutAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.Delete(System.String,System.String,System.String,System.Func{Nest.DeleteDeleteQueryString,Nest.DeleteDeleteQueryString})">
            <summary>DELETE /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/delete/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.DeleteAsync(System.String,System.String,System.String,System.Func{Nest.DeleteDeleteQueryString,Nest.DeleteDeleteQueryString})">
            <summary>DELETE /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/delete/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.DeleteByQuery(System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.DeleteByQueryAsync(System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.DeleteByQuery(System.String,System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="type">A comma-separated list of types to restrict the operation</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.DeleteByQueryAsync(System.String,System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="type">A comma-separated list of types to restrict the operation</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExistsHead(System.String,System.String,System.String,System.Func{Nest.ExistsHeadQueryString,Nest.ExistsHeadQueryString})">
            <summary>HEAD /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExistsHeadAsync(System.String,System.String,System.String,System.Func{Nest.ExistsHeadQueryString,Nest.ExistsHeadQueryString})">
            <summary>HEAD /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExplainGet(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainGetQueryString,Nest.ExplainGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExplainGetAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainGetQueryString,Nest.ExplainGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExplainPost(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainPostQueryString,Nest.ExplainPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ExplainPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainPostQueryString,Nest.ExplainPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.Get(System.String,System.String,System.String,System.Func{Nest.GetGetQueryString,Nest.GetGetQueryString})">
            <summary>GET /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.GetAsync(System.String,System.String,System.String,System.Func{Nest.GetGetQueryString,Nest.GetGetQueryString})">
            <summary>GET /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.GetSource(System.String,System.String,System.String,System.Func{Nest.GetSourceGetQueryString,Nest.GetSourceGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_source
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.GetSourceAsync(System.String,System.String,System.String,System.Func{Nest.GetSourceGetQueryString,Nest.GetSourceGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_source
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPost(System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPost(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPut(System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAsync(System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPut(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzeGet(System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzeGetAsync(System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzeGet(System.String,System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzeGetAsync(System.String,System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzePost(System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzePostAsync(System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzePost(System.String,System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesAnalyzePostAsync(System.String,System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCachePost(System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCachePostAsync(System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCachePost(System.String,System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCachePostAsync(System.String,System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCacheGet(System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCacheGetAsync(System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCacheGet(System.String,System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClearCacheGetAsync(System.String,System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClosePost(System.String,System.Func{Nest.IndicesClosePostQueryString,Nest.IndicesClosePostQueryString})">
            <summary>POST /{index}/_close
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesClosePostAsync(System.String,System.Func{Nest.IndicesClosePostQueryString,Nest.IndicesClosePostQueryString})">
            <summary>POST /{index}/_close
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesCreatePut(System.String,System.Object,System.Func{Nest.IndicesCreatePutQueryString,Nest.IndicesCreatePutQueryString})">
            <summary>PUT /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesCreatePutAsync(System.String,System.Object,System.Func{Nest.IndicesCreatePutQueryString,Nest.IndicesCreatePutQueryString})">
            <summary>PUT /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesCreatePost(System.String,System.Object,System.Func{Nest.IndicesCreatePostQueryString,Nest.IndicesCreatePostQueryString})">
            <summary>POST /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesCreatePostAsync(System.String,System.Object,System.Func{Nest.IndicesCreatePostQueryString,Nest.IndicesCreatePostQueryString})">
            <summary>POST /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDelete(System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteAsync(System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDelete(System.String,System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or empty string to delete all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteAsync(System.String,System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or empty string to delete all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteAlias(System.String,System.String,System.Func{Nest.IndicesDeleteAliasDeleteQueryString,Nest.IndicesDeleteAliasDeleteQueryString})">
            <summary>DELETE /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be deleted</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteAliasAsync(System.String,System.String,System.Func{Nest.IndicesDeleteAliasDeleteQueryString,Nest.IndicesDeleteAliasDeleteQueryString})">
            <summary>DELETE /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be deleted</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteMapping(System.String,System.String,System.Func{Nest.IndicesDeleteMappingDeleteQueryString,Nest.IndicesDeleteMappingDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` for all indices</param>
            <param name="type">The name of the document type to delete</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteMappingAsync(System.String,System.String,System.Func{Nest.IndicesDeleteMappingDeleteQueryString,Nest.IndicesDeleteMappingDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` for all indices</param>
            <param name="type">The name of the document type to delete</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteTemplate(System.String,System.Func{Nest.IndicesDeleteTemplateDeleteQueryString,Nest.IndicesDeleteTemplateDeleteQueryString})">
            <summary>DELETE /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteTemplateAsync(System.String,System.Func{Nest.IndicesDeleteTemplateDeleteQueryString,Nest.IndicesDeleteTemplateDeleteQueryString})">
            <summary>DELETE /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmer(System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmerAsync(System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmer(System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmerAsync(System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmer(System.String,System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
            <param name="type">A comma-separated list of document types to register warmer for; use `_all` or empty string to perform the operation on all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesDeleteWarmerAsync(System.String,System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
            <param name="type">A comma-separated list of document types to register warmer for; use `_all` or empty string to perform the operation on all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsHead(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to check</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsHeadAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to check</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsAliasHead(System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsAliasHeadAsync(System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsAliasHead(System.String,System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsAliasHeadAsync(System.String,System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsTypeHead(System.String,System.String,System.Func{Nest.IndicesExistsTypeHeadQueryString,Nest.IndicesExistsTypeHeadQueryString})">
            <summary>HEAD /{index}/{type}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesExistsTypeHeadAsync(System.String,System.String,System.Func{Nest.IndicesExistsTypeHeadQueryString,Nest.IndicesExistsTypeHeadQueryString})">
            <summary>HEAD /{index}/{type}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushPost(System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushPostAsync(System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushPost(System.String,System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushPostAsync(System.String,System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushGet(System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushGetAsync(System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushGet(System.String,System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFlushGetAsync(System.String,System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAlias(System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliasAsync(System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAlias(System.String,System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliasAsync(System.String,System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliases(System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliasesAsync(System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliases(System.String,System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /{index}/_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetAliasesAsync(System.String,System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /{index}/_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMapping(System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMappingAsync(System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMapping(System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMappingAsync(System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMapping(System.String,System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/{type}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetFieldMappingAsync(System.String,System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/{type}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMapping(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMappingAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMapping(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMappingAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMapping(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetMappingAsync(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetSettings(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetSettingsAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetSettings(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetSettingsAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetTemplate(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetTemplateAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetTemplate(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetTemplateAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmer(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmerAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmer(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmerAsync(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmer(System.String,System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesGetWarmerAsync(System.String,System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOpenPost(System.String,System.Func{Nest.IndicesOpenPostQueryString,Nest.IndicesOpenPostQueryString})">
            <summary>POST /{index}/_open
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOpenPostAsync(System.String,System.Func{Nest.IndicesOpenPostQueryString,Nest.IndicesOpenPostQueryString})">
            <summary>POST /{index}/_open
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizePost(System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizePostAsync(System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizePost(System.String,System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizePostAsync(System.String,System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizeGet(System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizeGetAsync(System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizeGet(System.String,System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesOptimizeGetAsync(System.String,System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAlias(System.String,System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAliasAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutAlias(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutAliasAsync(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAlias(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexPutAliasAsync(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutAlias(System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutAliasAsync(System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutMapping(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPutQueryString,Nest.IndicesPutMappingPutQueryString})">
            <summary>PUT /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutMappingAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPutQueryString,Nest.IndicesPutMappingPutQueryString})">
            <summary>PUT /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutMappingPost(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPostQueryString,Nest.IndicesPutMappingPostQueryString})">
            <summary>POST /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutMappingPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPostQueryString,Nest.IndicesPutMappingPostQueryString})">
            <summary>POST /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutSettings(System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutSettingsAsync(System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutSettings(System.String,System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutSettingsAsync(System.String,System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutTemplate(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePutQueryString,Nest.IndicesPutTemplatePutQueryString})">
            <summary>PUT /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutTemplateAsync(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePutQueryString,Nest.IndicesPutTemplatePutQueryString})">
            <summary>PUT /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutTemplatePost(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePostQueryString,Nest.IndicesPutTemplatePostQueryString})">
            <summary>POST /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutTemplatePostAsync(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePostQueryString,Nest.IndicesPutTemplatePostQueryString})">
            <summary>POST /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutWarmer(System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutWarmerAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutWarmer(System.String,System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="type">A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesPutWarmerAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="type">A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshPost(System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshPostAsync(System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshPost(System.String,System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshPostAsync(System.String,System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshGet(System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshGetAsync(System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshGet(System.String,System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesRefreshGetAsync(System.String,System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSegmentsGet(System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSegmentsGetAsync(System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSegmentsGet(System.String,System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /{index}/_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSegmentsGetAsync(System.String,System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /{index}/_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSnapshotIndexPost(System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSnapshotIndexPostAsync(System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSnapshotIndexPost(System.String,System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /{index}/_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSnapshotIndexPostAsync(System.String,System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /{index}/_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatsGet(System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatsGetAsync(System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatsGet(Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET _stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatsGetAsync(Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET _stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexStatsGet(System.String,Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexStatsGetAsync(System.String,Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesIndexingStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/indexing/{indexing_types}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="indexing_types">A comma-separated list of document types to include in the `indexing` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesIndexingStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/indexing/{indexing_types}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="indexing_types">A comma-separated list of document types to include in the `indexing` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSearchStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesSearchStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexSearchStatsGet(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexSearchStatsGetAsync(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFieldDataStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesFieldDataStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexFieldDataStatsGet(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndexFieldDataStatsGetAsync(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatusGet(System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatusGetAsync(System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatusGet(System.String,System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /{index}/_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesStatusGetAsync(System.String,System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /{index}/_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesUpdateAliasesPost(System.Object,System.Func{Nest.IndicesUpdateAliasesPostQueryString,Nest.IndicesUpdateAliasesPostQueryString})">
            <summary>POST /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The definition of `actions` to perform</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesUpdateAliasesPostAsync(System.Object,System.Func{Nest.IndicesUpdateAliasesPostQueryString,Nest.IndicesUpdateAliasesPostQueryString})">
            <summary>POST /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The definition of `actions` to perform</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGet(System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGetAsync(System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGet(System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGetAsync(System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGet(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryGetAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPost(System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPostAsync(System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPost(System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPostAsync(System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPost(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.IndicesValidateQueryPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.InfoGet(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.InfoGetAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.InfoHead(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.InfoHeadAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGet(System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGetAsync(System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGet(System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGetAsync(System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGet(System.String,System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetGetAsync(System.String,System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPost(System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPostAsync(System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPost(System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPostAsync(System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPost(System.String,System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MgetPostAsync(System.String,System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MltGet(System.String,System.String,System.String,System.Object,System.Func{Nest.MltGetQueryString,Nest.MltGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MltGetAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.MltGetQueryString,Nest.MltGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MltPost(System.String,System.String,System.String,System.Object,System.Func{Nest.MltPostQueryString,Nest.MltPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MltPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.MltPostQueryString,Nest.MltPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGet(System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGetAsync(System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGet(System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGetAsync(System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGet(System.String,System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchGetAsync(System.String,System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPost(System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPostAsync(System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPost(System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPostAsync(System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPost(System.String,System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.MsearchPostAsync(System.String,System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.IRawElasticClient.PercolateGet(System.String,System.String,System.Object,System.Func{Nest.PercolateGetQueryString,Nest.PercolateGetQueryString})">
            <summary>GET /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.IRawElasticClient.PercolateGetAsync(System.String,System.String,System.Object,System.Func{Nest.PercolateGetQueryString,Nest.PercolateGetQueryString})">
            <summary>GET /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.IRawElasticClient.PercolatePost(System.String,System.String,System.Object,System.Func{Nest.PercolatePostQueryString,Nest.PercolatePostQueryString})">
            <summary>POST /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.IRawElasticClient.PercolatePostAsync(System.String,System.String,System.Object,System.Func{Nest.PercolatePostQueryString,Nest.PercolatePostQueryString})">
            <summary>POST /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollGet(System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollGetAsync(System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollGet(System.String,System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollGetAsync(System.String,System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollPost(System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollPostAsync(System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollPost(System.String,System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.ScrollPostAsync(System.String,System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGet(System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGetAsync(System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGet(System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGetAsync(System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGet(System.String,System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchGetAsync(System.String,System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPost(System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPostAsync(System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPost(System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPostAsync(System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPost(System.String,System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SearchPostAsync(System.String,System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestPost(System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestPostAsync(System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestPost(System.String,System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestPostAsync(System.String,System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestGet(System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestGetAsync(System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestGet(System.String,System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.SuggestGetAsync(System.String,System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.IRawElasticClient.UpdatePost(System.String,System.String,System.String,System.Object,System.Func{Nest.UpdatePostQueryString,Nest.UpdatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_update
            <pre>http://elasticsearch.org/guide/reference/api/update/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
        </member>
        <member name="M:Nest.IRawElasticClient.UpdatePostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.UpdatePostQueryString,Nest.UpdatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_update
            <pre>http://elasticsearch.org/guide/reference/api/update/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPost(System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPostAsync(System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPost(System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPostAsync(System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPost(System.String,System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPostAsync(System.String,System.String,System.Object,System.Func{Nest.BulkPostQueryString,Nest.BulkPostQueryString})">
            <summary>POST /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPut(System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPutAsync(System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPut(System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPutAsync(System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPut(System.String,System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.BulkPutAsync(System.String,System.String,System.Object,System.Func{Nest.BulkPutQueryString,Nest.BulkPutQueryString})">
            <summary>PUT /{index}/{type}/_bulk
            <pre>http://elasticsearch.org/guide/reference/api/bulk/</pre>	
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClearScrollDelete(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>DELETE /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">A comma-separated list of scroll IDs to clear</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClearScrollDeleteAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>DELETE /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">A comma-separated list of scroll IDs to clear</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterGetSettings(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterGetSettingsAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterHealthGet(System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterHealthGetAsync(System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterHealthGet(System.String,System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health/{index}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterHealthGetAsync(System.String,System.Func{Nest.ClusterHealthGetQueryString,Nest.ClusterHealthGetQueryString})">
            <summary>GET /_cluster/health/{index}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-health/</pre>	
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeHotThreadsGet(System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeHotThreadsGetAsync(System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeHotThreadsGet(System.String,System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeHotThreadsGetAsync(System.String,System.Func{Nest.ClusterNodeHotThreadsGetQueryString,Nest.ClusterNodeHotThreadsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/hotthreads
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeInfoGet(System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeInfoGetAsync(System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeInfoGet(System.String,System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeInfoGetAsync(System.String,System.Func{Nest.ClusterNodeInfoGetQueryString,Nest.ClusterNodeInfoGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeShutdownPost(System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeShutdownPostAsync(System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeShutdownPost(System.String,System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_cluster/nodes/{node_id}/_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you&#39;re connected to, leave empty to perform the operation on all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeShutdownPostAsync(System.String,System.Func{Nest.ClusterNodeShutdownPostQueryString,Nest.ClusterNodeShutdownPostQueryString})">
            <summary>POST /_cluster/nodes/{node_id}/_shutdown
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to perform the operation on; use `_local` to perform the operation on the node you&#39;re connected to, leave empty to perform the operation on all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_cluster/nodes/{node_id}/stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(Nest.MetricFamilyOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(Nest.MetricFamilyOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(Nest.MetricFamilyOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(Nest.MetricFamilyOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a certain metric family</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(System.String,Nest.MetricOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(System.String,Nest.MetricOptions,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGet(System.String,Nest.MetricOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterNodeStatsGetAsync(System.String,Nest.MetricOptions,System.String,System.Func{Nest.ClusterNodeStatsGetQueryString,Nest.ClusterNodeStatsGetQueryString})">
            <summary>GET /_nodes/{node_id}/stats/indices/{metric}/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `indices` metric family (supports wildcards)</param>
            <param name="metric">Limit the information returned for `indices` family to a specific metric</param>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterPutSettings(System.Object,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>PUT /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterPutSettingsAsync(System.Object,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>PUT /_cluster/settings
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/</pre>	
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterReroutePost(System.Object,System.Func{Nest.ClusterReroutePostQueryString,Nest.ClusterReroutePostQueryString})">
            <summary>POST /_cluster/reroute
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/</pre>	
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterReroutePostAsync(System.Object,System.Func{Nest.ClusterReroutePostQueryString,Nest.ClusterReroutePostQueryString})">
            <summary>POST /_cluster/reroute
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/</pre>	
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterStateGet(System.Func{Nest.ClusterStateGetQueryString,Nest.ClusterStateGetQueryString})">
            <summary>GET /_cluster/state
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-state/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.ClusterStateGetAsync(System.Func{Nest.ClusterStateGetQueryString,Nest.ClusterStateGetQueryString})">
            <summary>GET /_cluster/state
            <pre>http://elasticsearch.org/guide/reference/api/admin-cluster-state/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.CountPost(System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountPostAsync(System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountPost(System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountPostAsync(System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountPost(System.String,System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountPostAsync(System.String,System.String,System.Object,System.Func{Nest.CountPostQueryString,Nest.CountPostQueryString})">
            <summary>POST /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGet(System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGetAsync(System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGet(System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGetAsync(System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGet(System.String,System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CountGetAsync(System.String,System.String,System.Object,System.Func{Nest.CountGetQueryString,Nest.CountGetQueryString})">
            <summary>GET /{index}/{type}/_count
            <pre>http://elasticsearch.org/guide/reference/api/count/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results (optional)</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePost(System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePostAsync(System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePost(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePostQueryString,Nest.CreatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePut(System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePutAsync(System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePut(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.CreatePutAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.CreatePutQueryString,Nest.CreatePutQueryString})">
            <summary>PUT /{index}/{type}/{id}/_create
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.Delete(System.String,System.String,System.String,System.Func{Nest.DeleteDeleteQueryString,Nest.DeleteDeleteQueryString})">
            <summary>DELETE /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/delete/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
        </member>
        <member name="M:Nest.RawElasticClient.DeleteAsync(System.String,System.String,System.String,System.Func{Nest.DeleteDeleteQueryString,Nest.DeleteDeleteQueryString})">
            <summary>DELETE /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/delete/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
        </member>
        <member name="M:Nest.RawElasticClient.DeleteByQuery(System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.DeleteByQueryAsync(System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.DeleteByQuery(System.String,System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="type">A comma-separated list of types to restrict the operation</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.DeleteByQueryAsync(System.String,System.String,System.Object,System.Func{Nest.DeleteByQueryDeleteQueryString,Nest.DeleteByQueryDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_query
            <pre>http://www.elasticsearch.org/guide/reference/api/delete-by-query/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="type">A comma-separated list of types to restrict the operation</param>
            <param name="body">A query to restrict the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExistsHead(System.String,System.String,System.String,System.Func{Nest.ExistsHeadQueryString,Nest.ExistsHeadQueryString})">
            <summary>HEAD /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExistsHeadAsync(System.String,System.String,System.String,System.Func{Nest.ExistsHeadQueryString,Nest.ExistsHeadQueryString})">
            <summary>HEAD /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExplainGet(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainGetQueryString,Nest.ExplainGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExplainGetAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainGetQueryString,Nest.ExplainGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExplainPost(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainPostQueryString,Nest.ExplainPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.ExplainPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.ExplainPostQueryString,Nest.ExplainPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_explain
            <pre>http://elasticsearch.org/guide/reference/api/explain/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The query definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.Get(System.String,System.String,System.String,System.Func{Nest.GetGetQueryString,Nest.GetGetQueryString})">
            <summary>GET /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.RawElasticClient.GetAsync(System.String,System.String,System.String,System.Func{Nest.GetGetQueryString,Nest.GetGetQueryString})">
            <summary>GET /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
        </member>
        <member name="M:Nest.RawElasticClient.GetSource(System.String,System.String,System.String,System.Func{Nest.GetSourceGetQueryString,Nest.GetSourceGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_source
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.GetSourceAsync(System.String,System.String,System.String,System.Func{Nest.GetSourceGetQueryString,Nest.GetSourceGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_source
            <pre>http://elasticsearch.org/guide/reference/api/get/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPost(System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPost(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPostQueryString,Nest.IndexPostQueryString})">
            <summary>POST /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPut(System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAsync(System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPut(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndexPutQueryString,Nest.IndexPutQueryString})">
            <summary>PUT /{index}/{type}/{id}
            <pre>http://elasticsearch.org/guide/reference/api/index_/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzeGet(System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzeGetAsync(System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzeGet(System.String,System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzeGetAsync(System.String,System.Object,System.Func{Nest.IndicesAnalyzeGetQueryString,Nest.IndicesAnalyzeGetQueryString})">
            <summary>GET /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzePost(System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzePostAsync(System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzePost(System.String,System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesAnalyzePostAsync(System.String,System.Object,System.Func{Nest.IndicesAnalyzePostQueryString,Nest.IndicesAnalyzePostQueryString})">
            <summary>POST /{index}/_analyze
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/</pre>	
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCachePost(System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCachePostAsync(System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCachePost(System.String,System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCachePostAsync(System.String,System.Func{Nest.IndicesClearCachePostQueryString,Nest.IndicesClearCachePostQueryString})">
            <summary>POST /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCacheGet(System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCacheGetAsync(System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCacheGet(System.String,System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClearCacheGetAsync(System.String,System.Func{Nest.IndicesClearCacheGetQueryString,Nest.IndicesClearCacheGetQueryString})">
            <summary>GET /{index}/_cache/clear
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/</pre>	
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClosePost(System.String,System.Func{Nest.IndicesClosePostQueryString,Nest.IndicesClosePostQueryString})">
            <summary>POST /{index}/_close
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesClosePostAsync(System.String,System.Func{Nest.IndicesClosePostQueryString,Nest.IndicesClosePostQueryString})">
            <summary>POST /{index}/_close
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesCreatePut(System.String,System.Object,System.Func{Nest.IndicesCreatePutQueryString,Nest.IndicesCreatePutQueryString})">
            <summary>PUT /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesCreatePutAsync(System.String,System.Object,System.Func{Nest.IndicesCreatePutQueryString,Nest.IndicesCreatePutQueryString})">
            <summary>PUT /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesCreatePost(System.String,System.Object,System.Func{Nest.IndicesCreatePostQueryString,Nest.IndicesCreatePostQueryString})">
            <summary>POST /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesCreatePostAsync(System.String,System.Object,System.Func{Nest.IndicesCreatePostQueryString,Nest.IndicesCreatePostQueryString})">
            <summary>POST /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDelete(System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteAsync(System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDelete(System.String,System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or empty string to delete all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteAsync(System.String,System.Func{Nest.IndicesDeleteDeleteQueryString,Nest.IndicesDeleteDeleteQueryString})">
            <summary>DELETE /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or empty string to delete all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteAlias(System.String,System.String,System.Func{Nest.IndicesDeleteAliasDeleteQueryString,Nest.IndicesDeleteAliasDeleteQueryString})">
            <summary>DELETE /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be deleted</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteAliasAsync(System.String,System.String,System.Func{Nest.IndicesDeleteAliasDeleteQueryString,Nest.IndicesDeleteAliasDeleteQueryString})">
            <summary>DELETE /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be deleted</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteMapping(System.String,System.String,System.Func{Nest.IndicesDeleteMappingDeleteQueryString,Nest.IndicesDeleteMappingDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` for all indices</param>
            <param name="type">The name of the document type to delete</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteMappingAsync(System.String,System.String,System.Func{Nest.IndicesDeleteMappingDeleteQueryString,Nest.IndicesDeleteMappingDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` for all indices</param>
            <param name="type">The name of the document type to delete</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteTemplate(System.String,System.Func{Nest.IndicesDeleteTemplateDeleteQueryString,Nest.IndicesDeleteTemplateDeleteQueryString})">
            <summary>DELETE /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteTemplateAsync(System.String,System.Func{Nest.IndicesDeleteTemplateDeleteQueryString,Nest.IndicesDeleteTemplateDeleteQueryString})">
            <summary>DELETE /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmer(System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmerAsync(System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmer(System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmerAsync(System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmer(System.String,System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
            <param name="type">A comma-separated list of document types to register warmer for; use `_all` or empty string to perform the operation on all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesDeleteWarmerAsync(System.String,System.String,System.String,System.Func{Nest.IndicesDeleteWarmerDeleteQueryString,Nest.IndicesDeleteWarmerDeleteQueryString})">
            <summary>DELETE /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to delete all warmers</param>
            <param name="type">A comma-separated list of document types to register warmer for; use `_all` or empty string to perform the operation on all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsHead(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to check</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsHeadAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /{index}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of indices to check</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsAliasHead(System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsAliasHeadAsync(System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsAliasHead(System.String,System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsAliasHeadAsync(System.String,System.String,System.Func{Nest.IndicesExistsAliasHeadQueryString,Nest.IndicesExistsAliasHeadQueryString})">
            <summary>HEAD /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsTypeHead(System.String,System.String,System.Func{Nest.IndicesExistsTypeHeadQueryString,Nest.IndicesExistsTypeHeadQueryString})">
            <summary>HEAD /{index}/{type}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesExistsTypeHeadAsync(System.String,System.String,System.Func{Nest.IndicesExistsTypeHeadQueryString,Nest.IndicesExistsTypeHeadQueryString})">
            <summary>HEAD /{index}/{type}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushPost(System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushPostAsync(System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushPost(System.String,System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushPostAsync(System.String,System.Func{Nest.IndicesFlushPostQueryString,Nest.IndicesFlushPostQueryString})">
            <summary>POST /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushGet(System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushGetAsync(System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushGet(System.String,System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFlushGetAsync(System.String,System.Func{Nest.IndicesFlushGetQueryString,Nest.IndicesFlushGetQueryString})">
            <summary>GET /{index}/_flush
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAlias(System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliasAsync(System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAlias(System.String,System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliasAsync(System.String,System.String,System.Func{Nest.IndicesGetAliasGetQueryString,Nest.IndicesGetAliasGetQueryString})">
            <summary>GET /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliases(System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliasesAsync(System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliases(System.String,System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /{index}/_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetAliasesAsync(System.String,System.Func{Nest.IndicesGetAliasesGetQueryString,Nest.IndicesGetAliasesGetQueryString})">
            <summary>GET /{index}/_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMapping(System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMappingAsync(System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMapping(System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMappingAsync(System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMapping(System.String,System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/{type}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetFieldMappingAsync(System.String,System.String,System.String,System.Func{Nest.IndicesGetFieldMappingGetQueryString,Nest.IndicesGetFieldMappingGetQueryString})">
            <summary>GET /{index}/{type}/_mapping/field/{field}
            <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-field-mapping.html</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="field">A comma-separated list of fields</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMapping(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMappingAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMapping(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMappingAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMapping(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetMappingAsync(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetSettings(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetSettingsAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetSettings(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetSettingsAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetTemplate(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetTemplateAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetTemplate(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetTemplateAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmer(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmerAsync(System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmer(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmerAsync(System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmer(System.String,System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesGetWarmerAsync(System.String,System.String,System.String,System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` to perform the operation on all indices</param>
            <param name="name">The name of the warmer (supports wildcards); leave empty to get all warmers</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOpenPost(System.String,System.Func{Nest.IndicesOpenPostQueryString,Nest.IndicesOpenPostQueryString})">
            <summary>POST /{index}/_open
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOpenPostAsync(System.String,System.Func{Nest.IndicesOpenPostQueryString,Nest.IndicesOpenPostQueryString})">
            <summary>POST /{index}/_open
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/</pre>	
            </summary>
            <param name="index">The name of the index</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizePost(System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizePostAsync(System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizePost(System.String,System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizePostAsync(System.String,System.Func{Nest.IndicesOptimizePostQueryString,Nest.IndicesOptimizePostQueryString})">
            <summary>POST /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizeGet(System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizeGetAsync(System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizeGet(System.String,System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesOptimizeGetAsync(System.String,System.Func{Nest.IndicesOptimizeGetQueryString,Nest.IndicesOptimizeGetQueryString})">
            <summary>GET /{index}/_optimize
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAlias(System.String,System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAliasAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutAlias(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutAliasAsync(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAlias(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexPutAliasAsync(System.String,System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /{index}/_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="index">The name of the index with an alias</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutAlias(System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutAliasAsync(System.Object,System.Func{Nest.IndicesPutAliasPutQueryString,Nest.IndicesPutAliasPutQueryString})">
            <summary>PUT /_alias
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutMapping(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPutQueryString,Nest.IndicesPutMappingPutQueryString})">
            <summary>PUT /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutMappingAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPutQueryString,Nest.IndicesPutMappingPutQueryString})">
            <summary>PUT /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutMappingPost(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPostQueryString,Nest.IndicesPutMappingPostQueryString})">
            <summary>POST /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutMappingPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutMappingPostQueryString,Nest.IndicesPutMappingPostQueryString})">
            <summary>POST /{index}/{type}/_mapping
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to perform the operation on all indices</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutSettings(System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutSettingsAsync(System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutSettings(System.String,System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutSettingsAsync(System.String,System.Object,System.Func{Nest.IndicesPutSettingsPutQueryString,Nest.IndicesPutSettingsPutQueryString})">
            <summary>PUT /{index}/_settings
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutTemplate(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePutQueryString,Nest.IndicesPutTemplatePutQueryString})">
            <summary>PUT /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutTemplateAsync(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePutQueryString,Nest.IndicesPutTemplatePutQueryString})">
            <summary>PUT /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutTemplatePost(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePostQueryString,Nest.IndicesPutTemplatePostQueryString})">
            <summary>POST /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutTemplatePostAsync(System.String,System.Object,System.Func{Nest.IndicesPutTemplatePostQueryString,Nest.IndicesPutTemplatePostQueryString})">
            <summary>POST /_template/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/</pre>	
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutWarmer(System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutWarmerAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutWarmer(System.String,System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="type">A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesPutWarmerAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.IndicesPutWarmerPutQueryString,Nest.IndicesPutWarmerPutQueryString})">
            <summary>PUT /{index}/{type}/_warmer/{name}
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to register the warmer for; use `_all` or empty string to perform the operation on all indices</param>
            <param name="name">The name of the warmer</param>
            <param name="type">A comma-separated list of document types to register the warmer for; leave empty to perform the operation on all types</param>
            <param name="body">The search request definition for the warmer (query, filters, facets, sorting, etc)</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshPost(System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshPostAsync(System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshPost(System.String,System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshPostAsync(System.String,System.Func{Nest.IndicesRefreshPostQueryString,Nest.IndicesRefreshPostQueryString})">
            <summary>POST /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshGet(System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshGetAsync(System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshGet(System.String,System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesRefreshGetAsync(System.String,System.Func{Nest.IndicesRefreshGetQueryString,Nest.IndicesRefreshGetQueryString})">
            <summary>GET /{index}/_refresh
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSegmentsGet(System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSegmentsGetAsync(System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSegmentsGet(System.String,System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /{index}/_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSegmentsGetAsync(System.String,System.Func{Nest.IndicesSegmentsGetQueryString,Nest.IndicesSegmentsGetQueryString})">
            <summary>GET /{index}/_segments
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-segments/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSnapshotIndexPost(System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSnapshotIndexPostAsync(System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSnapshotIndexPost(System.String,System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /{index}/_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSnapshotIndexPostAsync(System.String,System.Func{Nest.IndicesSnapshotIndexPostQueryString,Nest.IndicesSnapshotIndexPostQueryString})">
            <summary>POST /{index}/_gateway/snapshot
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string for all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatsGet(System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatsGetAsync(System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndexStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatsGet(Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET _stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatsGetAsync(Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET _stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexStatsGet(System.String,Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexStatsGetAsync(System.String,Nest.MetricFamilyOptions,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/{metric_family}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="metric_family">Limit the information returned to a specific metric</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesIndexingStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/indexing/{indexing_types}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="indexing_types">A comma-separated list of document types to include in the `indexing` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesIndexingStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/indexing/{indexing_types}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="indexing_types">A comma-separated list of document types to include in the `indexing` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSearchStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesSearchStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexSearchStatsGet(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexSearchStatsGetAsync(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/search/{search_groups}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
            <param name="search_groups">A comma-separated list of search groups to include in the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFieldDataStatsGet(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesFieldDataStatsGetAsync(System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexFieldDataStatsGet(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndexFieldDataStatsGetAsync(System.String,System.String,System.Func{Nest.IndicesStatsGetQueryString,Nest.IndicesStatsGetQueryString})">
            <summary>GET /{index}/_stats/fielddata/{fields}
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-stats/</pre>	
            </summary>
            <param name="fields">A comma-separated list of fields to return detailed information for, when returning the `search` statistics</param>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatusGet(System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatusGetAsync(System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatusGet(System.String,System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /{index}/_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesStatusGetAsync(System.String,System.Func{Nest.IndicesStatusGetQueryString,Nest.IndicesStatusGetQueryString})">
            <summary>GET /{index}/_status
            <pre>http://elasticsearch.org/guide/reference/api/admin-indices-status/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesUpdateAliasesPost(System.Object,System.Func{Nest.IndicesUpdateAliasesPostQueryString,Nest.IndicesUpdateAliasesPostQueryString})">
            <summary>POST /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The definition of `actions` to perform</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesUpdateAliasesPostAsync(System.Object,System.Func{Nest.IndicesUpdateAliasesPostQueryString,Nest.IndicesUpdateAliasesPostQueryString})">
            <summary>POST /_aliases
            <pre>http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/</pre>	
            </summary>
            <param name="body">The definition of `actions` to perform</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGet(System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGetAsync(System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGet(System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGetAsync(System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGet(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryGetAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryGetQueryString,Nest.IndicesValidateQueryGetQueryString})">
            <summary>GET /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPost(System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPostAsync(System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPost(System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPostAsync(System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPost(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.IndicesValidateQueryPostAsync(System.String,System.String,System.Object,System.Func{Nest.IndicesValidateQueryPostQueryString,Nest.IndicesValidateQueryPostQueryString})">
            <summary>POST /{index}/{type}/_validate/query
            <pre>http://www.elasticsearch.org/guide/reference/api/validate/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.InfoGet(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.InfoGetAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>GET /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.InfoHead(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.InfoHeadAsync(System.Func{Nest.FluentQueryString,Nest.FluentQueryString})">
            <summary>HEAD /
            <pre>http://elasticsearch.org/guide/</pre>	
            </summary>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGet(System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGetAsync(System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGet(System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGetAsync(System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGet(System.String,System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetGetAsync(System.String,System.String,System.Object,System.Func{Nest.MgetGetQueryString,Nest.MgetGetQueryString})">
            <summary>GET /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPost(System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPostAsync(System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPost(System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPostAsync(System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPost(System.String,System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MgetPostAsync(System.String,System.String,System.Object,System.Func{Nest.MgetPostQueryString,Nest.MgetPostQueryString})">
            <summary>POST /{index}/{type}/_mget
            <pre>http://elasticsearch.org/guide/reference/api/multi-get/</pre>	
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
        </member>
        <member name="M:Nest.RawElasticClient.MltGet(System.String,System.String,System.String,System.Object,System.Func{Nest.MltGetQueryString,Nest.MltGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.MltGetAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.MltGetQueryString,Nest.MltGetQueryString})">
            <summary>GET /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.MltPost(System.String,System.String,System.String,System.Object,System.Func{Nest.MltPostQueryString,Nest.MltPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.MltPostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.MltPostQueryString,Nest.MltPostQueryString})">
            <summary>POST /{index}/{type}/{id}/_mlt
            <pre>http://elasticsearch.org/guide/reference/api/more-like-this/</pre>	
            </summary>
            <param name="id">The document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="body">A specific search request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGet(System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGetAsync(System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGet(System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGetAsync(System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGet(System.String,System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchGetAsync(System.String,System.String,System.Object,System.Func{Nest.MsearchGetQueryString,Nest.MsearchGetQueryString})">
            <summary>GET /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPost(System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPostAsync(System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPost(System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPostAsync(System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPost(System.String,System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.MsearchPostAsync(System.String,System.String,System.Object,System.Func{Nest.MsearchPostQueryString,Nest.MsearchPostQueryString})">
            <summary>POST /{index}/{type}/_msearch
            <pre>http://www.elasticsearch.org/guide/reference/api/multi-search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
        </member>
        <member name="M:Nest.RawElasticClient.PercolateGet(System.String,System.String,System.Object,System.Func{Nest.PercolateGetQueryString,Nest.PercolateGetQueryString})">
            <summary>GET /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.RawElasticClient.PercolateGetAsync(System.String,System.String,System.Object,System.Func{Nest.PercolateGetQueryString,Nest.PercolateGetQueryString})">
            <summary>GET /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.RawElasticClient.PercolatePost(System.String,System.String,System.Object,System.Func{Nest.PercolatePostQueryString,Nest.PercolatePostQueryString})">
            <summary>POST /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.RawElasticClient.PercolatePostAsync(System.String,System.String,System.Object,System.Func{Nest.PercolatePostQueryString,Nest.PercolatePostQueryString})">
            <summary>POST /{index}/{type}/_percolate
            <pre>http://elasticsearch.org/guide/reference/api/percolate/</pre>	
            </summary>
            <param name="index">The name of the index with a registered percolator query</param>
            <param name="type">The document type</param>
            <param name="body">The document (`doc`) to percolate against registered queries; optionally also a `query` to limit the percolation to specific registered queries</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollGet(System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollGetAsync(System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollGet(System.String,System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollGetAsync(System.String,System.Object,System.Func{Nest.ScrollGetQueryString,Nest.ScrollGetQueryString})">
            <summary>GET /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollPost(System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollPostAsync(System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollPost(System.String,System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.ScrollPostAsync(System.String,System.Object,System.Func{Nest.ScrollPostQueryString,Nest.ScrollPostQueryString})">
            <summary>POST /_search/scroll/{scroll_id}
            <pre>http://www.elasticsearch.org/guide/reference/api/search/scroll/</pre>	
            </summary>
            <param name="scroll_id">The scroll ID</param>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGet(System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGetAsync(System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGet(System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGetAsync(System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGet(System.String,System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchGetAsync(System.String,System.String,System.Object,System.Func{Nest.SearchGetQueryString,Nest.SearchGetQueryString})">
            <summary>GET /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPost(System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPostAsync(System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPost(System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPostAsync(System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPost(System.String,System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SearchPostAsync(System.String,System.String,System.Object,System.Func{Nest.SearchPostQueryString,Nest.SearchPostQueryString})">
            <summary>POST /{index}/{type}/_search
            <pre>http://www.elasticsearch.org/guide/reference/api/search/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestPost(System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestPostAsync(System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestPost(System.String,System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestPostAsync(System.String,System.Object,System.Func{Nest.SuggestPostQueryString,Nest.SuggestPostQueryString})">
            <summary>POST /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestGet(System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestGetAsync(System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestGet(System.String,System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.SuggestGetAsync(System.String,System.Object,System.Func{Nest.SuggestGetQueryString,Nest.SuggestGetQueryString})">
            <summary>GET /{index}/_suggest
            <pre>http://elasticsearch.org/guide/reference/api/search/suggest/</pre>	
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices</param>
            <param name="body">The request definition</param>
        </member>
        <member name="M:Nest.RawElasticClient.UpdatePost(System.String,System.String,System.String,System.Object,System.Func{Nest.UpdatePostQueryString,Nest.UpdatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_update
            <pre>http://elasticsearch.org/guide/reference/api/update/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
        </member>
        <member name="M:Nest.RawElasticClient.UpdatePostAsync(System.String,System.String,System.String,System.Object,System.Func{Nest.UpdatePostQueryString,Nest.UpdatePostQueryString})">
            <summary>POST /{index}/{type}/{id}/_update
            <pre>http://elasticsearch.org/guide/reference/api/update/</pre>	
            </summary>
            <param name="id">Document ID</param>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
        </member>
        <member name="M:Nest.StringInjectExtension.Inject(System.String,System.Object)">
            <summary>
            Extension method that replaces keys in a string with the values of matching object properties.
            <remarks>Uses <see cref="!:String.Format()"/> internally; custom formats should match those used for that method.</remarks>
            </summary>
            <param name="formatString">The format string, containing keys like {foo} and {foo:SomeFormat}.</param>
            <param name="injectionObject">The object whose properties should be injected in the string</param>
            <returns>A version of the formatString string with keys replaced by (formatted) key values.</returns>
        </member>
        <member name="M:Nest.StringInjectExtension.Inject(System.String,System.Collections.IDictionary)">
            <summary>
            Extension method that replaces keys in a string with the values of matching dictionary entries.
            <remarks>Uses <see cref="!:String.Format()"/> internally; custom formats should match those used for that method.</remarks>
            </summary>
            <param name="formatString">The format string, containing keys like {foo} and {foo:SomeFormat}.</param>
            <param name="dictionary">An <see cref="T:System.Collections.IDictionary"/> with keys and values to inject into the string</param>
            <returns>A version of the formatString string with dictionary keys replaced by (formatted) key values.</returns>
        </member>
        <member name="M:Nest.StringInjectExtension.Inject(System.String,System.Collections.Hashtable)">
            <summary>
            Extension method that replaces keys in a string with the values of matching hashtable entries.
            <remarks>Uses <see cref="!:String.Format()"/> internally; custom formats should match those used for that method.</remarks>
            </summary>
            <param name="formatString">The format string, containing keys like {foo} and {foo:SomeFormat}.</param>
            <param name="attributes">A <see cref="T:System.Collections.Hashtable"/> with keys and values to inject into the string</param>
            <returns>A version of the formatString string with hastable keys replaced by (formatted) key values.</returns>
        </member>
        <member name="M:Nest.StringInjectExtension.InjectSingleValue(System.String,System.String,System.Object)">
            <summary>
            Replaces all instances of a 'key' (e.g. {foo} or {foo:SomeFormat}) in a string with an optionally formatted value, and returns the result.
            </summary>
            <param name="formatString">The string containing the key; unformatted ({foo}), or formatted ({foo:SomeFormat})</param>
            <param name="key">The key name (foo)</param>
            <param name="replacementValue">The replacement value; if null is replaced with an empty string</param>
            <returns>The input string with any instances of the key replaced with the replacement value</returns>
        </member>
        <member name="M:Nest.StringInjectExtension.GetPropertyHash(System.Object)">
            <summary>
            Creates a HashTable based on current object state.
            <remarks>Copied from the MVCToolkit HtmlExtensionUtility class</remarks>
            </summary>
            <param name="properties">The object from which to get the properties</param>
            <returns>A <see cref="T:System.Collections.Hashtable"/> containing the object instance's property names and their values</returns>
        </member>
        <member name="T:Nest.IReindexResponse`1">
            <summary>
            POCO representing the reindex response for a each step
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.BulkResponse">
            <summary>
            The bulk result indexing the search results into the new index.
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.QueryResponse">
            <summary>
            The scroll result
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.Scroll">
            <summary>
            The no of scroll this result represents
            </summary>
        </member>
        <member name="P:Nest.IReindexResponse`1.IsValid">
            <summary>
            Whether both the scroll and reindex result are valid
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.ToIndex(System.String)">
            <summary>
            The index into which we're indexing
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.FromIndex(System.String)">
            <summary>
            The index from which we're reindexing 
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Scroll(System.String)">
            <summary>
            A search request can be scrolled by specifying the scroll parameter. The scroll parameter is a time value parameter (for example: scroll=5m), indicating for how long the nodes that participate in the search will maintain relevant resources in order to continue and support it. This is very similar in its idea to opening a cursor against a database.
            </summary>
            <param name="scrollTime">The scroll parameter is a time value parameter (for example: scroll=5m)</param>
            <returns></returns>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.Query(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery})">
            <summary>
            A query to optionally limit the documents to use for the reindex operation.  
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.NewIndexName(System.String)">
            <summary>
            The new index name to reindex too. 
            </summary>
        </member>
        <member name="M:Nest.ReindexDescriptor`1.CreateIndex(System.Func{Nest.CreateIndexDescriptor,Nest.CreateIndexDescriptor})">
            <summary>
            CreateIndex selector, will be passed the a descriptor initialized with the settings from
            the index we're reindexing from
            </summary>
        </member>
        <member name="T:Nest.ReindexResponse`1">
            <summary>
            POCO representing the reindex response for a each step
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(System.Func{Nest.ReindexDescriptor{``0},Nest.ReindexDescriptor{``0}})">
            <summary>
            Index object to the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.ClusterState(Nest.ClusterStateInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the health status of the cluster.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetWarmer(System.Func{Nest.GetWarmerDescriptor,Nest.GetWarmerDescriptor})">
            <summary>
            Gets warmers, query will be returned as json string
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWarmer(System.Func{Nest.GetWarmerDescriptor,Nest.GetWarmerDescriptor})">
            <summary>
            Delete warmers
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById``1(System.Int32)">
            <summary>
            Synchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById``1(System.String)">
            <summary>
            Synchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById(System.String,System.String,System.String)">
            <summary>
            Synchronously deletes a document by id in the specified index and type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById(System.String,System.String,System.Int32)">
            <summary>
            Synchronously deletes a document by id in the specified index and type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById``1(System.Int32,Nest.DeleteParameters)">
            <summary>
            Synchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById``1(System.String,Nest.DeleteParameters)">
            <summary>
            Synchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById(System.String,System.String,System.String,Nest.DeleteParameters)">
            <summary>
            Synchronously deletes a document by id in the specified index and type
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteById(System.String,System.String,System.Int32,Nest.DeleteParameters)">
            <summary>
            Synchronously deletes a document by id in the specified index and type
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync``1(System.Int32)">
            <summary>
            Asynchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync``1(System.String)">
            <summary>
            Asynchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync(System.String,System.String,System.String)">
            <summary>
            Asynchronously deletes a document by id in the specified index and type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync(System.String,System.String,System.Int32)">
            <summary>
            Asynchronously deletes a document by id in the specified index and type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync``1(System.Int32,Nest.DeleteParameters)">
            <summary>
            Asynchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync``1(System.String,Nest.DeleteParameters)">
            <summary>
            Asynchronously deletes a document by id in the default index and the inferred typename for T
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync(System.String,System.String,System.String,Nest.DeleteParameters)">
            <summary>
            Asynchronously deletes a document by id in the specified index and type
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByIdAsync(System.String,System.String,System.Int32,Nest.DeleteParameters)">
            <summary>
            Asynchronously deletes a document by id in the specified index and type
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQuery``1(System.Func{Nest.RoutingQueryPathDescriptor{``0},Nest.BaseQuery},Nest.DeleteByQueryParameters)">
            <summary>
            Deletes all documents that match the query
            </summary>
            <param name="query">RoutingQueryPathDescriptor also allows you to control which indices and types are affected</param>
            <param name="parameters">Control routing/consistency and replication</param>
            <returns>IDeleteResponse, check .IsValid to validate success</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteByQuery(System.Func{Nest.RoutingQueryPathDescriptor,Nest.BaseQuery},Nest.DeleteByQueryParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteByQueryAsync``1(System.Func{Nest.RoutingQueryPathDescriptor{``0},Nest.BaseQuery},Nest.DeleteByQueryParameters)">
            <summary>
            Deletes all documents that match the query
            </summary>
            <param name="query">RoutingQueryPathDescriptor also allows you to control which indices and types are affected</param>
            <param name="parameters">Control routing/consistency and replication</param>
            <returns>IDeleteResponse, check .IsValid to validate success</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteByQueryAsync(System.Func{Nest.RoutingQueryPathDescriptor,Nest.BaseQuery},Nest.DeleteByQueryParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Deletes all the objects by inferring its id in the default index and the inferred type for T
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}})" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},Nest.SimpleBulkParameters)">
            <summary>
            Deletes all the objects by inferring its id in the default index and the inferred type for T
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},Nest.SimpleBulkParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and the inferred type for T
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String)" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and the inferred type for T
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,Nest.SimpleBulkParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and type
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String)" -->
        <member name="M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,Nest.SimpleBulkParameters)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and type
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String,Nest.SimpleBulkParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Deletes all the objects by inferring its id in the default index and the inferred type for T
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}})" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},Nest.SimpleBulkParameters)">
            <summary>
            Deletes all the objects by inferring its id in the default index and the inferred type for T
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},Nest.SimpleBulkParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and the inferred type for T
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String)" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and the inferred type for T
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,Nest.SimpleBulkParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and type
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String)" -->
        <member name="M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,Nest.SimpleBulkParameters,System.String)">
            <summary>
            Deletes all the objects by inferring its id in the specified index and type
            </summary>
            <param name="bulkParameters">allows you to control the replication and refresh behavior</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,Nest.SimpleBulkParameters,System.String)" -->
        <member name="M:Nest.ElasticClient.CreateIndex(System.String,Nest.IndexSettings)">
            <summary>
            Create an index with the specified index settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndex(System.String,System.Func{Nest.CreateIndexDescriptor,Nest.CreateIndexDescriptor})">
            <summary>
            Create an index with the specified index settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Health(Nest.HealthLevel)">
            <summary>
            Gets the health status of the cluster, at the specified level.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Health(System.Collections.Generic.IEnumerable{System.String},Nest.HealthLevel)">
            <summary>
            Gets the health status of the cluster, at the specified level, for the specified indexes.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Health(Nest.HealthParams)">
            <summary>
            Gets the health status of the cluster according to the healthparams passed.
            </summary>
            <param name="healthParams"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Health(System.Collections.Generic.IEnumerable{System.String},Nest.HealthParams)">
            <summary>
            Gets the health status of the cluster according to the healthparams passed, for the specified indexes.
            </summary>
            <param name="healthParams"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.MoreLikeThis``1(System.Func{Nest.MoreLikeThisDescriptor{``0},Nest.MoreLikeThisDescriptor{``0}})">
            <summary>
            Search using T as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping``1">
            <summary>
            Get the current mapping for T at the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping``1(System.String)">
            <summary>
            Get the current mapping for T at the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping(System.Type)">
            <summary>
            Get the current mapping for T at the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping(System.Type,System.String)">
            <summary>
            Get the current mapping for T at the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping(System.String,System.String)">
            <summary>
            Get the current mapping for type at the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping``1">
            <summary>
            Deletes the mapping for the inferred type name of T under the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping``1(System.String)">
            <summary>
            Deletes the mapping for the inferred type name of T under the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping``1(System.String,System.String)">
            <summary>
            Deletes the mapping for the specified type name under the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping(System.Type)">
            <summary>
            Deletes the mapping for the inferred type name of T under the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping(System.Type,System.String)">
            <summary>
            Deletes the mapping for the inferred type name of T under the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteMapping(System.Type,System.String,System.String)">
            <summary>
            Deletes the mapping for the specified type name under the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetFull``1(System.Int32)">
            <summary>
            Gets a document of T by id in the default index and the inferred typename for T
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.GetFull``1(System.String)">
            <summary>
            Gets a document of T by id in the default index and the inferred typename for T
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.GetFull``1(System.String,System.String,System.String)">
            <summary>
            Gets a document of T by id in the specified index and the specified typename
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.GetFull``1(System.String,System.String,System.Int32)">
            <summary>
            Gets a document of T by id in the specified index and the specified typename
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets multiple documents of T by id in the default index and the inferred typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet``1(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets multiple documents of T by id in the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet``1(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets multiple documents of T by id in the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets multiple documents of T by id in the specified index and the specified typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets multiple documents of T by id in the specified index and the specified typename for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodeInfo(Nest.NodesInfo)">
            <summary>
            Gets the health status of the cluster.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodeInfo(System.Collections.Generic.IEnumerable{System.String},Nest.NodesInfo)">
            <summary>
            Gets the health status of the cluster, for the specified nodes.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodeStats(Nest.NodeInfoStats)">
            <summary>
            Gets the health status of each node in the cluster, for the specified indexes.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodeStats(System.Collections.Generic.IEnumerable{System.String},Nest.NodeInfoStats)">
            <summary>
            Gets the health status of each node in the cluster, for the specified indexes.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Scroll(System.String,System.String)">
            <summary>
            Scrolling search, ideal for scrolling on the server as it allows to keep a query open on the serverside.
            Please consult the docs http://www.elasticsearch.org/guide/reference/api/search/scroll.html
            on the do's and don'ts!
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Validate(System.Func{Nest.ValidateQueryPathDescriptor,Nest.BaseQuery})">
            <summary>
            The validate API allows a user to validate a potentially expensive query without executing it. 
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Validate``1(System.Func{Nest.ValidateQueryPathDescriptor{``0},Nest.BaseQuery})">
            <summary>
            The validate API allows a user to validate a potentially expensive query without executing it. 
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator``1(System.String)">
            <summary>
            Unregister a percolator, on the default index.
            </summary>
            <param name="name">Name of the percolator</param>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator(System.String,System.String)">
            <summary>
            Unregister a percolator
            </summary>
            <param name="name">Name of the percolator</param>
        </member>
        <member name="M:Nest.ElasticClient.Segments">
            <summary>
            Get segment information for all the indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Segments(System.String)">
            <summary>
            Get the segment information for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Segments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get the segment information for the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexExists(System.String)">
            <summary>
            Check if the index already exists
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Stats">
            <summary>
            Gets all the stats for all the indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Stats(Nest.StatsParams)">
            <summary>
            Gets only the specified stats for all the indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Stats(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all the stats for the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Stats(System.String)">
            <summary>
            Gets all the stats for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Stats(System.Collections.Generic.IEnumerable{System.String},Nest.StatsParams)">
            <summary>
            Gets the specified stats for the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings">
            <summary>
            Gets the index settings for the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings(System.String)">
            <summary>
            Gets the index settings for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.UpdateSettings(Nest.IndexSettings)">
            <summary>
            Update the index settings for the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.UpdateSettings(System.String,Nest.IndexSettings)">
            <summary>
            Update the index settings for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex``1">
            <summary>
            Delete the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex(System.String)">
            <summary>
            Delete the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RewriteIndexSettingsResponseToIndexSettingsJSon(Newtonsoft.Json.Linq.JContainer,System.String[],Newtonsoft.Json.Linq.JToken)">
            <summary>
            Rewrites the index settings response to index settings json.
            </summary>
            <param name="container">The container.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache">
            <summary>
            Clears all caches of all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache``1">
            <summary>
            Clears the entire cache for the default index set in the client settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache``1(Nest.ClearCacheOptions)">
            <summary>
            Clears the specified caches for the default index set in the client settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(Nest.ClearCacheOptions)">
            <summary>
            Clears the specified caches for all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(System.Collections.Generic.IEnumerable{System.String},Nest.ClearCacheOptions)">
            <summary>
            Clears the specified caches for only the indices passed under indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(System.String)">
            <summary>
            Performs the standard analysis process on a text and return the tokens breakdown of the text.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(Nest.AnalyzeParams,System.String)">
            <summary>
            Analyzes specified text according to the analyzeparams passed.
            </summary>
            <returns>AnalyzeResponse contains a breakdown of the token under .Tokens</returns>
        </member>
        <member name="M:Nest.ElasticClient.Analyze``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Analyzes text according to the current analyzer of the field in the default index set in the clientsettings.
            </summary>
            <returns>AnalyzeResponse contains a breakdown of the token under .Tokens</returns>
        </member>
        <member name="M:Nest.ElasticClient.Analyze``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.String)">
            <summary>
             Analyzes text according to the current analyzer of the field in the passed index.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.GetIndicesPointingToAlias(System.String)">
            <summary>
            Get all the indices pointing to an alias
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Swap(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Repoint an alias from a set of old indices to a set of new indices in one operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Swap(Nest.AliasParams,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Repoint an alias from a set of old indices to a set of new indices in one operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.String)">
            <summary>
            Add an alias to the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.String,System.String)">
            <summary>
            Add an alias to the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add multiple aliases to the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add multiple aliases to the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAlias(System.String)">
            <summary>
            Remove an alias for the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAlias(System.String,System.String)">
            <summary>
            Remove an alias for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAlias(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove multiple alias for the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAlias(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove multiple alias for the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Associate multiple indices with one alias
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Rename(System.String,System.String,System.String)">
            <summary>
            Rename an old alias for index to a new alias in one operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(Nest.AliasParams)">
            <summary>
            Freeform alias overload for complete control of all the aspects (does an add operation)
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.Collections.Generic.IEnumerable{Nest.AliasParams})">
            <summary>
            Freeform multi alias overload for complete control of all the aspects (does multiple add operations)
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAlias(Nest.AliasParams)">
            <summary>
            Freeform remove alias overload for complete control of all the aspects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RemoveAliases(System.Collections.Generic.IEnumerable{Nest.AliasParams})">
            <summary>
            Freeform remove multi alias overload for complete control of all the aspects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize``1">
            <summary>
            Optimize the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize``1(Nest.OptimizeParams)">
            <summary>
            Optimize the default index using the specified optimize params
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(System.String)">
            <summary>
            Optimize the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(System.String,Nest.OptimizeParams)">
            <summary>
            Optimize the specified index using the specified optimize params
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize">
            <summary>
            Optimize all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(Nest.OptimizeParams)">
            <summary>
            Optimize all indices using the specified optimize params
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Optimize the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Optimize(System.Collections.Generic.IEnumerable{System.String},Nest.OptimizeParams)">
            <summary>
            Optimize the specified indices using the specified optimize params
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot">
            <summary>
            Snapshot all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot``1">
            <summary>
            Snapshot the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(System.String)">
            <summary>
            Snapshot the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Snapshot the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Flush``1(System.Boolean)">
            <summary>
            <para>Flushes the infered typename for T under the default index </para>
            <para>The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, ElasticSearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.</para>
            </summary>
            <param name="refresh">optional, wait for the flush operation to complete</param>
        </member>
        <member name="M:Nest.ElasticClient.Flush(System.Boolean)">
            <summary>
            <para>Flushes all indices</para>
            <para>The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, ElasticSearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.</para>
            </summary>
            <param name="refresh">optional, wait for the flush operation to complete</param>
        </member>
        <member name="M:Nest.ElasticClient.Flush(System.String,System.Boolean)">
            <summary>
            <para>Flushes the specified index</para>
            <para>The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, ElasticSearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.</para>
            </summary>
            <param name="refresh">optional, wait for the flush operation to complete</param>
        </member>
        <member name="M:Nest.ElasticClient.Flush(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            <para>Flushes the specified indices</para>
            <para>The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, ElasticSearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.</para>
            </summary>
            <param name="refresh">optional, wait for the flush operation to complete</param>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex(System.String)">
            <summary>
            Open index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex(System.String)">
            <summary>
            Close index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex``1">
            <summary>
            Open the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex``1">
            <summary>
            Close the default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Refresh">
            <summary>
             refreshes all
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(System.String)">
            <summary>
            Refresh an index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Refresh multiple indices at once.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Refresh``1">
            <summary>
            refresh the connection settings default index for type T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CountAllRaw(System.String)">
            <summary>
            Performs a count query over all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CountAll(System.Func{Nest.QueryDescriptor,Nest.BaseQuery})">
            <summary>
            Performs a count query over all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CountAll``1(System.Func{Nest.QueryDescriptor{``0},Nest.BaseQuery})">
            <summary>
            Performs a count query over all indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count(System.Func{Nest.QueryDescriptor,Nest.BaseQuery})">
            <summary>
            Performs a count query over the default index set in the client settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.QueryDescriptor,Nest.BaseQuery})">
            <summary>
            Performs a count query over the passed indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.QueryDescriptor,Nest.BaseQuery})">
            <summary>
            Performs a count query over the multiple types in multiple indices.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(System.Func{Nest.QueryDescriptor{``0},Nest.BaseQuery})">
            <summary>
            Perform a count query over the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.QueryDescriptor{``0},Nest.BaseQuery})">
            <summary>
            Performs a count query over the specified indices
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.QueryDescriptor{``0},Nest.BaseQuery})">
            <summary>
             Performs a count query over the multiple types in multiple indices.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0)">
            <summary>
            Synchronously delete the object in the inferred type for T in the default index specified in the client settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0,System.String)">
            <summary>
            Synchronously delete the object in the inferred type for T in specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0,System.String,System.String)">
            <summary>
            Synchronously delete the object in specified type in the specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0,Nest.DeleteParameters)">
            <summary>
            Synchronously delete the object in the inferred type for T in the default index specified in the client settings
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>	
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0,System.String,Nest.DeleteParameters)">
            <summary>
            Synchronously delete the object in the inferred type for T in the specified index.
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(``0,System.String,System.String,Nest.DeleteParameters)">
            <summary>
            Synchronously delete the object in the inferred type for T in the specified index.
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(``0)">
            <summary>
            Asynchronously delete the object in the inferred type for T in the default index specified in the client settings
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(``0,System.String)">
            <summary>
            Asynchronously delete the object in the inferred type for T in specified index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(``0,System.String,System.String)">
            <summary>
            Asynchronously delete the object in specified type in the specified index
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.ElasticClient.DeleteAsync``1(``0,Nest.DeleteParameters)" -->
        <member name="M:Nest.ElasticClient.DeleteAsync``1(``0,System.String,Nest.DeleteParameters)">
            <summary>
            Asynchronously delete the object in the inferred type for T in the specified index.
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(``0,System.String,System.String,Nest.DeleteParameters)">
            <summary>
            Asynchronously delete the object in the inferred type for T in the specified index.
            </summary>
            <param name="deleteParameters">Allows you to pass in additional delete parameters such as version and routing</param>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes``1(System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the inferred type name for T under the default index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes``1(System.String,System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the inferred type name for T under the specified index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes``1(System.String,System.String,System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the specified type name under the specified index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes(System.Type,System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the inferred type name for T under the default index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes(System.Type,System.String,System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the inferred type name for T under the specified index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.MapFromAttributes(System.Type,System.String,System.String,System.Int32)">
            <summary>
            <para>Automatically map an object based on its attributes, this will also explicitly map strings to strings, datetimes to dates etc even 
            if they are not marked with any attributes.</para>
            <para>
            Type name is the specified type name under the specified index
            </para>
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Map(Nest.RootObjectMapping)">
            <summary>
            Verbosely and explicitly map an object using a TypeMapping object, this gives you exact control over the mapping. Index is the inferred default index
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Map(Nest.RootObjectMapping,System.String,System.String,System.Boolean)">
            <summary>
            Verbosely and explicitly map an object using a TypeMapping object, this gives you exact control over the mapping.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(System.Int32)">
            <summary>
            Gets a document of T by id in the default index and the inferred typename for T
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(System.String)">
            <summary>
            Gets a document of T by id in the default index and the inferred typename for T
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(System.String,System.String,System.String)">
            <summary>
            Gets a document of T by id in the specified index and the specified typename
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(System.String,System.String,System.Int32)">
            <summary>
            Gets a document of T by id in the specified index and the specified typename
            </summary>
            <returns>an instance of T</returns>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0)">
            <summary>
            Index object to the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,Nest.IndexParameters)">
            <summary>
            Index object to the default index and the inferred type name for T, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String)">
            <summary>
            Index object to the specified index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the inferred type name for T, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String)">
            <summary>
            Index object to the specified index and the specified type name
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String,System.String)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String,System.Int32)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.String,System.String,System.Int32,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0)">
            <summary>
            Index object to the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,Nest.IndexParameters)">
            <summary>
            Index object to the default index and the inferred type name for T, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String)">
            <summary>
            Index object to the specified index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the inferred type name for T, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String)">
            <summary>
            Index object to the specified index and the specified type name
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String,System.String)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String,System.String,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String,System.Int32)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.String,System.String,System.Int32,Nest.IndexParameters)">
            <summary>
            Index object to the specified index and the specified type name and force the id of the object to update, using index parameters to further control the operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Index objects to the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}})">
            <summary>
            Index objects to the default index and the inferred type name for T, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0},Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the default index and the inferred type name for T
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the default index and the inferred type name for T, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Index objects to the specified index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String)">
            <summary>
            Index objects to the specified index and the inferred type name for T, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the inferred type name for T
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the inferred type name for T, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Index objects to the specified index and the specified type name
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String)">
            <summary>
            Index objects to the specified index and the specified type name, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the specified type name
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexMany``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the specified type name, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Index objects to the default index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}})">
            <summary>
            Index objects to the default index and the inferred type name for T, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0},Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the default index and the inferred type name for T
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the default index and the inferred type name for T, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Index objects to the specified index and the inferred type name for T
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String)">
            <summary>
            Index objects to the specified index and the inferred type name for T, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the inferred type name for T
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the inferred type name for T, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Index objects to the specified index and the specified type name
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String)">
            <summary>
            Index objects to the specified index and the specified type name, using bulk parameters to control the individual objects
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the specified type name
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.IndexManyAsync``1(System.Collections.Generic.IEnumerable{Nest.BulkParameters{``0}},System.String,System.String,Nest.SimpleBulkParameters)">
            <summary>
            Index objects to the specified index and the specified type name, using bulk parameters to control the individual objects
            and SimpleBulkParameters to control the entire operation
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfo">
            <summary>
            Get the data when you hit the elasticsearch endpoint at the too
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfoAsync">
            <summary>
            Get the data when you hit the elasticsearch endpoint at the too
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ElasticClient.Search(System.Func{Nest.SearchDescriptor{System.Object},Nest.SearchDescriptor{System.Object}})">
            <summary>
            Synchronously search using dynamic as its return type.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.SearchDescriptor{``0}})">
            <summary>
            Synchronously search using T as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(Nest.SearchDescriptor{``0})">
            <summary>
            Synchronously search using TResult as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.SearchDescriptor{``0}})">
            <summary>
            Synchronously search using TResult as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(Nest.SearchDescriptor{``0})">
            <summary>
            Synchronously search using T as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.SearchRaw``2(System.String,System.String)">
            <summary>
            Synchronously search using TResult as the return type, string based.
            </summary>
            <param name="path">EXPERT OPTION: Pass the path and querystring used to perform the search on, when null it will be infered from the type</param>
        </member>
        <member name="M:Nest.ElasticClient.SearchRawAsync``2(System.String,System.String)">
            <summary>
            Asynchronously search using TResult as the return type, string based.
            </summary>
            <param name="path">EXPERT OPTION: Pass the path and querystring used to perform the search on, when null it will be infered from the type</param>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync(System.Func{Nest.SearchDescriptor{System.Object},Nest.SearchDescriptor{System.Object}})">
            <summary>
            Asynchronously search using dynamic as its return type.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.SearchDescriptor{``0}})">
            <summary>
            Asynchronously search using T as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(Nest.SearchDescriptor{``0})">
            <summary>
            Asynchronously search using T as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.SearchDescriptor{``0}})">
            <summary>
            Asynchronously search using TResult as the return type
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(Nest.SearchDescriptor{``0})">
            <summary>
            Asynchronously search using TResult as the return type
            </summary>
        </member>
        <member name="M:Nest.BaseBulkOperation.GetBody">
            <summary>
            Only used for bulk update operations but in the future might come in handy for other complex bulk ops.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Id(System.Int32)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Id(System.String)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Object(`0)">
            <summary>
            The object to update, if id is not manually set it will be inferred from the object.
            Used ONLY to infer the ID see Document() to apply a partial object merge.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Document(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="M:Nest.PercolatorDescriptor`1.Index(System.String)">
            <summary>
            Explicitly specify an index, otherwise the default index for T is used.
            </summary>
        </member>
        <member name="M:Nest.PercolatorDescriptor`1.Name(System.String)">
            <summary>
            Explicitly specify an type, otherwise the default type for T is used.
            </summary>
        </member>
        <member name="M:Nest.PercolatorDescriptor`1.Add(System.String,System.Object)">
            <summary>
            Add metadata associated with this percolator query document
            </summary>
        </member>
        <member name="M:Nest.PercolatorDescriptor`1.Query(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery})">
            <summary>
            Optionally specify more search options such as facets, from/to etcetera.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Index(System.String)">
            <summary>
            Explicitly specify an index, otherwise the default index for T is used.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Type(System.String)">
            <summary>
            Explicitly specify an type, otherwise the default type for T is used.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Object(`0)">
            <summary>
            The object to perculate
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery})">
            <summary>
            Optionally specify more search options such as facets, from/to etcetera.
            </summary>
        </member>
        <member name="P:Nest.IElasticPropertyAttribute.NumericType">
            <summary>
            Defaults to float so be sure to set this correctly!
            </summary>
        </member>
        <member name="P:Nest.IElasticPropertyAttribute.DateFormat">
            <summary>
            http://www.elasticsearch.org/guide/reference/mapping/date-format.html
            </summary>
        </member>
        <member name="M:Nest.DSL.Descriptors.RescoreQueryDescriptor`1.Query(Nest.BaseQuery)">
            <summary>
            Describe the query to perform using the static Query class
            </summary>
        </member>
        <member name="M:Nest.DSL.Descriptors.RescoreQueryDescriptor`1.QueryRaw(System.String)">
            <summary>
            Describe the query to perform as a raw json string
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.DSL.Descriptors.RescoreQueryDescriptor`1.Strict(System.Boolean)" -->
        <member name="P:Nest.DSL.Descriptors.RescoreQueryDescriptor`1._Strict">
            <summary>
            Whether conditionless queries are allowed or not
            </summary>
        </member>
        <member name="M:Nest.CreateWarmerDescriptor.WarmerName(System.String)">
            <summary>
            The name of the warmer
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.WarmerName(System.String)">
            <summary>
            The name of the warmer
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Index(System.String)">
            <summary>
            Set the index.
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Indices(System.String[])">
            <summary>
            Set multiple indices
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.Indices(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set multiple indices
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.IndexFromType``1">
            <summary>
            Sets the index which is derived from the type T
            </summary>
        </member>
        <member name="M:Nest.PutWarmerDescriptor.IndexFromType(System.Type)">
            <summary>
            Sets the index which is derived from the type
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.WamerWildcard(System.String)">
            <summary>
            A wildcard like: "warm*"
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.WarmerName(System.String)">
            <summary>
            The name of the warmer
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.AllIndices">
            <summary>
            Gets the warmer from all the indices, this is the default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Index(System.String)">
            <summary>
            Set the index.
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Indices(System.String[])">
            <summary>
            Set multiple indices
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.Indices(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Set multiple indices
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.IndexFromType``1">
            <summary>
            Sets the index which is derived from the type T
            </summary>
        </member>
        <member name="M:Nest.GetWarmerDescriptor.IndexFromType(System.Type)">
            <summary>
            Sets the index which is derived from the type
            </summary>
        </member>
        <member name="T:Nest.MatchPhrasePrefixQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms.
            It allows for prefix matches on the last term in the text.
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="T:Nest.MatchPhraseQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms. A PhraseQuery is built by QueryParser for input like "new york".
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="P:Nest.BulkIndexResponseItem.Matches">
            <summary>
            Null if Percolation was not requested while indexing this doc, otherwise returns the percolator _ids that matched (if any)
            </summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.FixedPath(System.String,System.String)">
            <summary>
            Allows you to perform the multi search on a fixed path. 
            Each operation that doesn't specify an index or type will use this fixed index/type
            over the default infered index and type.
            </summary>
        </member>
        <member name="M:Nest.TemplateMappingDescriptor.InitializeUsing(Nest.TemplateMapping)">
            <summary>
            Initialize the descriptor using the values from for instance a previous Get Template Mapping call.
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Id(System.Int32)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Id(System.String)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Object(`0)">
            <summary>
            The object to update, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Consistency(Nest.Consistency)">
            <summary>
            When making bulk calls, you can require a minimum number of active shards in the partition 
            through the consistency parameter. The values allowed are one, quorum, and all. It defaults to the node level
            setting of action.write_consistency, which in turn defaults to quorum.
            <pre>
            For example, in a N shards with 2 replicas index, there will have to be at least 2 active shards within the relevant partition (quorum) for the 
            operation to succeed. In a N shards with 1 replica scenario, there will need to be a single shard active (in this case, one and quorum is the same).
            </pre>
            </summary>
            <param name="consistency"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BulkDescriptor.Refresh(System.Boolean)">
            <summary>
            The refresh parameter can be set to true in order to refresh the relevant shards immediately after the bulk operation has occurred and 
            make it searchable, instead of waiting for the normal refresh interval to expire. 
            Setting it to true can trigger additional load, and may slow down indexing.
            </summary>
            <param name="refresh"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BulkDescriptor.FixedPath(System.String,System.String)">
            <summary>
            Allows you to perform the multiget on a fixed path. 
            Each operation that doesn't specify an index or type will use this fixed index/type
            over the default infered index and type.
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Id(System.Int32)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Id(System.String)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Object(`0)">
            <summary>
            The object to index, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Id(System.Int32)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Id(System.String)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Object(`0)">
            <summary>
            The object to infer the id off, (if id is not passed using Id())
            </summary>
        </member>
        <member name="T:Nest.Language">
            <summary>
            Language types used for language analyzers
            </summary>
        </member>
        <member name="T:Nest.LanguageAnalyzer">
            <summary>
            A set of analyzers aimed at analyzing specific language text. 
            </summary>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.KeywordAnalyzer">
            <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on. 
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para>
            </summary>
        </member>
        <member name="T:Nest.PatternAnalyzer">
            <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="T:Nest.StopAnalyzer">
            <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.StopAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.StopAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.WhitespaceAnalyzer">
            <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.SimpleAnalyzer">
            <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.HtmlStripCharFilter">
            <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
        </member>
        <member name="T:Nest.MappingCharFilter">
            <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
        </member>
        <member name="T:Nest.AsciiFoldingTokenFilter">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are 
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="T:Nest.CompoundWordTokenFilter">
            <summary>
            Token filters that allow to decompose compound words.
            </summary>
        </member>
        <member name="T:Nest.TrimTokenFilter">
            <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
        </member>
        <member name="T:Nest.UniqueTokenFilter">
            <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
        </member>
        <member name="P:Nest.UniqueTokenFilter.OnlyOnSamePosition">
            <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
        </member>
        <member name="T:Nest.TruncateTokenFilter">
            <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token) 
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para>
            </summary>
        </member>
        <member name="P:Nest.TruncateTokenFilter.Length">
            <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
        </member>
        <member name="T:Nest.ElisionTokenFilter">
            <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
        </member>
        <member name="P:Nest.ElisionTokenFilter.Articles">
            <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
        </member>
        <member name="T:Nest.ReverseTokenFilter">
            <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
        </member>
        <member name="T:Nest.PhoneticTokenFilter">
            <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
        </member>
        <member name="T:Nest.SnowballTokenFilter">
            <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
        </member>
        <member name="T:Nest.KStemTokenFilter">
             <summary>
            The kstem token filter is a high performance filter for english. 
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para>
             </summary>
        </member>
        <member name="T:Nest.KeywordMarkerTokenFilter">
            <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="T:Nest.StemmerTokenFilter">
            <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
        </member>
        <member name="T:Nest.PorterStemTokenFilter">
            <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenFilter">
             <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para>
             </summary>
        </member>
        <member name="T:Nest.LengthTokenFilter">
            <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenFilter">
            <summary>
            A token filter of type standard that normalizes tokens extracted with the Standard Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.PathHierarchyTokenizer">
             <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para>
            <para>And produces tokens:</para>
            <para></para>
            <para>/something</para>
            <para>/something/something</para>
            <para>/something/something/else</para>
             </summary>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Delimiter">
            <summary>
            The character delimiter to use, defaults to /.
            </summary>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Replacement">
            <summary>
            An optional replacement character to use. Defaults to the delimiter
            </summary>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.BufferSize">
            <summary>
            The buffer size to use, defaults to 1024.
            </summary>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Reverse">
            <summary>
            Generates tokens in reverse order, defaults to false.
            </summary>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Skip">
            <summary>
            Controls initial tokens to skip, defaults to 0.
            </summary>
        </member>
        <member name="T:Nest.UaxEmailUrlTokenizer">
            <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
        </member>
        <member name="P:Nest.UaxEmailUrlTokenizer.MaximumTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.PatternTokenizer">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression. 
            </summary>
        </member>
        <member name="P:Nest.PatternTokenizer.Pattern">
            <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
        </member>
        <member name="P:Nest.PatternTokenizer.Flags">
            <summary>
            The regular expression flags.
            </summary>
        </member>
        <member name="P:Nest.PatternTokenizer.Group">
            <summary>
            Which group to extract into tokens. Defaults to -1 (split).
            </summary>
        </member>
        <member name="T:Nest.WhitespaceTokenizer">
            <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenizer">
            <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents. 
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para>
            </summary>
        </member>
        <member name="P:Nest.StandardTokenizer.MaximumTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.NGramTokenizer">
            <summary>
            A tokenizer of type nGram.
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenizer">
            <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together. 
            <para>It divides text at non-letters and converts them to lower case. </para>
            <para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para>
            <para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para>
            </summary>
        </member>
        <member name="T:Nest.LetterTokenizer">
            <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters. 
            <para>Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not separated by spaces.</para>
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenizer">
            <summary>
            A tokenizer of type edgeNGram.
            </summary>
        </member>
        <member name="T:Nest.KeywordTokenizer">
            <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
        </member>
        <member name="P:Nest.KeywordTokenizer.BufferSize">
            <summary>
            The term buffer size. Defaults to 256.
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenFilter">
            <summary>
            A token filter of type edgeNGram.
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.InitializeUsing(Nest.IndexSettings)">
            <summary>
            Initialize the descriptor using the values from for instance a previous Get Index Settings call.
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.NumberOfShards(System.Int32)">
            <summary>
            Set the number of shards (if possible) for the new index.
            </summary>
            <param name="shards"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.NumberOfReplicas(System.Int32)">
            <summary>
            Set the number of replicas (if possible) for the new index.
            </summary>
            <param name="replicas"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Settings(System.Action{Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Set/Update settings, the index.* prefix is not needed for the keys.
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.RemoveMapping(System.String)">
            <summary>
            Remove an existing mapping by name
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.RemoveMapping``1">
            <summary>
            Remove an exisiting mapping by inferred type name
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.AddMapping``1(System.Func{Nest.RootObjectMappingDescriptor{``0},Nest.RootObjectMappingDescriptor{``0}})">
            <summary>
            Add a new mapping for T
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.AddMapping``1(Nest.RootObjectMapping,System.Func{Nest.RootObjectMappingDescriptor{``0},Nest.RootObjectMappingDescriptor{``0}})">
            <summary>
            Add a new mapping using the first rootObjectMapping parameter as the base to construct the new mapping.
            Handy if you wish to reuse a mapping.
            </summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Analysis(System.Func{Nest.AnalysisDescriptor,Nest.AnalysisDescriptor})">
            <summary>
            Set up analysis tokenizers, filters, analyzers
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Index(System.String)">
            <summary>
            Explicitly specify an index, otherwise the default index for T is used.
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Type(System.String)">
            <summary>
            Explicitly specify an type, otherwise the default type for T is used.
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Id(System.Int32)">
            <summary>
            Explicitly specify an id, otherwise the default index for T is used.
            Either Id() or Object() MUST be called for Nest to infer an id. 
            If both are specified Id() will win
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Id(System.String)">
            <summary>
            Explicitly specify an id, otherwise the default index for T is used.
            Either Id() or Object() MUST be called for Nest to infer an id. 
            If both are specified Id() will win
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Object(`0)">
            <summary>
            Specify an object to infer the id from
            Either Id() or Object() MUST be called for Nest to infer an id. 
            If both are specified Id() will win
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Options(System.Func{Nest.MoreLikeThisQueryDescriptor{`0},Nest.MoreLikeThisQueryDescriptor{`0}})">
            <summary>
            Specify on which fields the _mlt should act and how it should behave
            </summary>
        </member>
        <member name="M:Nest.MoreLikeThisDescriptor`1.Search(System.Func{Nest.SearchDescriptor{`0},Nest.SearchDescriptor{`0}})">
            <summary>
            Optionally specify more search options such as facets, from/to etcetera.
            </summary>
        </member>
        <member name="M:Nest.NestedObjectMappingDescriptor`2.MapFromAttributes(System.Int32)">
            <summary>
            Convenience method to map from most of the object from the attributes/properties.
            Later calls on the fluent interface can override whatever is set is by this call. 
            This helps mapping all the ints as ints, floats as floats etcetera withouth having to be overly verbose in your fluent mapping
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ObjectMappingDescriptor`2.MapFromAttributes(System.Int32)">
            <summary>
            Convenience method to map from most of the object from the attributes/properties.
            Later calls on the fluent interface can override whatever is set is by this call. 
            This helps mapping all the ints as ints, floats as floats etcetera withouth having to be overly verbose in your fluent mapping
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nest.BinaryMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="P:Nest.BooleanMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="P:Nest.DateMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="P:Nest.NumberMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="P:Nest.StringMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.MapFromAttributes(System.Int32)">
            <summary>
            Convenience method to map from most of the object from the attributes/properties.
            Later calls on the fluent interface can override whatever is set is by this call. 
            This helps mapping all the ints as ints, floats as floats etcetera withouth having to be overly verbose in your fluent mapping
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.TypeName(System.String)">
            <summary>
            Explicitly set the typename otherwise it will infer the typename on its own (lowercase and pluralized).
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.IndexName(System.String)">
            <summary>
            Explicitly set the index name otherwise it will infer the indexname based on the type
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.IndexNames(System.String[])">
            <summary>
            Explicitly set the index names otherwise it will infer the indexname based on the type
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.IndexNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Explicitly set the index names otherwise it will infer the indexname based on the type
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.RootObjectMappingDescriptor`1.IgnoreConflicts(System.Boolean)">
            <summary>
            When an existing mapping already exists under the given type, the two mapping definitions, the one already defined, and the new ones are merged. 
            The ignore_conflicts parameters can be used to control if conflicts should be ignored or not, by default, it is set to false which means conflicts are not ignored.
            The definition of conflict is really dependent on the type merged, but in general, if a different core type is defined, it is considered as a conflict. 
            New mapping definitions can be added to object types, and core type mapping can be upgraded to multi_field type.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.MultiGetDescriptor.FixedPath(System.String,System.String)">
            <summary>
            Allows you to perform the multiget on a fixed path. 
            The index and optionally type specified here take precedence over the chained get operations.
            </summary>
        </member>
        <member name="T:Nest.InMemoryConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the index set for the type on the connectionsettings.
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed.
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Routing(System.String)">
            <summary>
            Set the routing for the get operation
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.SimpleGetDescriptor`1.Fields(System.String[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Index(System.String)">
            <summary>
            Manually set the index, default to the default index or the index set for the type on the connectionsettings.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type(System.String)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type(System.Type)">
            <summary>
            Manually set the type of which a typename will be inferred
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Refresh(System.Boolean)">
            <summary>
            The refresh parameter can be set to true in order to refresh the relevant shard before the get operation and make it searchable. Setting it to true should be done after careful thought and verification that this does not cause a heavy load on the system (and slows down indexing).
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Routing(System.String)">
            <summary>
            When indexing using the ability to control the routing, in order to get a document, the routing value should also be provided.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Realtime(System.Boolean)">
            <summary>
            By default, the get API is realtime, and is not affected by the refresh rate of the index (when data will become visible for search).
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Fields(System.String[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Preference(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Custom (string) value: A custom value will be used to guarantee that the same shards
            will be used for the same custom value. This can help with “jumping values” 
            when hitting different shards in different refresh states. 
            A sample value can be something like the web session id, or the user name.
            </para>
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.ExecuteOnPrimary">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed only on the primary shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.ExecuteOnLocalShard">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will prefer to be executed on a local allocated shard is possible.
            </para>
            </summary>
        </member>
        <member name="T:Nest.NgramTokenFilter">
            <summary>
            A token filter of type nGram.
            </summary>
        </member>
        <member name="T:Nest.SynonymTokenFilter">
            <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process. 
            </summary>
        </member>
        <member name="P:Nest.ValidateResponse.Explanations">
            <summary>
            Gets the explanations if Explain() was set.
            </summary>
        </member>
        <member name="M:Nest.BaseQuery.op_BitwiseAnd(Nest.BaseQuery,Nest.BaseQuery)">
            <summary>
            AND's two BaseQueries
            </summary>
            <returns>A new basequery that represents the AND of the two</returns>
        </member>
        <member name="M:Nest.QueryDescriptor`1.QueryString(System.Action{Nest.QueryStringDescriptor{`0}})">
            <summary>
            A query that uses a query parser in order to parse its content.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Terms(System.String,System.String[])">
            <summary>
            A query that match on any (configurable) of the provided terms. This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Terms(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String[])">
            <summary>
            A query that match on any (configurable) of the provided terms. This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.TermsDescriptor(System.Action{Nest.TermsQueryDescriptor{`0}})">
            <summary>
            A query that match on any (configurable) of the provided terms. This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Fuzzy(System.Action{Nest.FuzzyQueryDescriptor{`0}})">
            <summary>
            A fuzzy based query that uses similarity based on Levenshtein (edit distance) algorithm.
            Warning: this query is not very scalable with its default prefix length of 0 – in this case,
            every term will be enumerated and cause an edit score calculation or max_expansions is not set.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.FuzzyNumeric(System.Action{Nest.FuzzyNumericQueryDescriptor{`0}})">
            <summary>
            fuzzy query on a numeric field will result in a range query “around” the value using the min_similarity value
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.FuzzyDate(System.Action{Nest.FuzzyDateQueryDescriptor{`0}})">
            <summary>
            fuzzy query on a numeric field will result in a range query “around” the value using the min_similarity value
            </summary>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Text(System.Action{Nest.TextQueryDescriptor{`0}})">
            <summary>
            The default text query is of type boolean. It means that the text provided is analyzed and the analysis 
            process constructs a boolean query from the provided text.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.TextPhrase(System.Action{Nest.TextPhraseQueryDescriptor{`0}})">
            <summary>
            The text_phrase query analyzes the text and creates a phrase query out of the analyzed text. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.TextPhrasePrefix(System.Action{Nest.TextPhrasePrefixQueryDescriptor{`0}})">
            <summary>
            The text_phrase_prefix is the same as text_phrase, expect it allows for prefix matches on the last term 
            in the text
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Match(System.Action{Nest.MatchQueryDescriptor{`0}})">
            <summary>
            The default text query is of type boolean. It means that the text provided is analyzed and the analysis 
            process constructs a boolean query from the provided text.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.MatchPhrase(System.Action{Nest.MatchPhraseQueryDescriptor{`0}})">
            <summary>
            The text_phrase query analyzes the text and creates a phrase query out of the analyzed text. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.MatchPhrasePrefix(System.Action{Nest.MatchPhrasePrefixQueryDescriptor{`0}})">
            <summary>
            The text_phrase_prefix is the same as text_phrase, expect it allows for prefix matches on the last term 
            in the text
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.QueryDescriptor`1.MultiMatch(System.Action{Nest.MultiMatchQueryDescriptor{`0}})" -->
        <member name="M:Nest.QueryDescriptor`1.Nested(System.Action{Nest.NestedQueryDescriptor{`0}})">
            <summary>
            Nested query allows to query nested objects / docs (see nested mapping). The query is executed against the 
            nested objects / docs as if they were indexed as separate docs (they are, internally) and resulting in the
            root parent doc (or parent nested mapping).
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Indices(System.Action{Nest.IndicesQueryDescriptor{`0}})">
            <summary>
            The indices query can be used when executed across multiple indices, allowing to have a query that executes
            only when executed on an index that matches a specific list of indices, and another query that executes 
            when it is executed on an index that does not match the listed indices.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Range(System.Action{Nest.RangeQueryDescriptor{`0}})">
            <summary>
            Matches documents with fields that have terms within a certain range. The type of the Lucene query depends
            on the field type, for string fields, the TermRangeQuery, while for number/date fields, the query is
            a NumericRangeQuery
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.FuzzyLikeThis(System.Action{Nest.FuzzyLikeThisDescriptor{`0}})">
            <summary>
            Fuzzy like this query find documents that are “like” provided text by running it against one or more fields.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.MoreLikeThis(System.Action{Nest.MoreLikeThisQueryDescriptor{`0}})">
            <summary>
            More like this query find documents that are “like” provided text by running it against one or more fields.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.HasChild``1(System.Action{Nest.HasChildQueryDescriptor{``0}})">
            <summary>
            The has_child query works the same as the has_child filter, by automatically wrapping the filter with a 
            constant_score.
            </summary>
            <typeparam name="K">Type of the child</typeparam>
        </member>
        <member name="M:Nest.QueryDescriptor`1.HasParent``1(System.Action{Nest.HasParentQueryDescriptor{``0}})">
            <summary>
            The has_child query works the same as the has_child filter, by automatically wrapping the filter with a 
            constant_score.
            </summary>
            <typeparam name="K">Type of the child</typeparam>
        </member>
        <member name="M:Nest.QueryDescriptor`1.TopChildren``1(System.Action{Nest.TopChildrenQueryDescriptor{``0}})">
            <summary>
            The top_children query runs the child query with an estimated hits size, and out of the hit docs, aggregates 
            it into parent docs. If there aren’t enough parent docs matching the requested from/size search request, 
            then it is run again with a wider (more hits) search.
            </summary>
            <typeparam name="K">Type of the child</typeparam>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Filtered(System.Action{Nest.FilteredQueryDescriptor{`0}})">
            <summary>
            A query that applies a filter to the results of another query. This query maps to Lucene FilteredQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Dismax(System.Action{Nest.DismaxQueryDescriptor{`0}})">
            <summary>
            A query that generates the union of documents produced by its subqueries, and that scores each document 
            with the maximum score for that document as produced by any subquery, plus a tie breaking increment for 
            any additional matching subqueries.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.ConstantScore(System.Action{Nest.ConstantScoreQueryDescriptor{`0}})">
            <summary>
            A query that wraps a filter or another query and simply returns a constant score equal to the query boost 
            for every document in the filter. Maps to Lucene ConstantScoreQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.CustomBoostFactor(System.Action{Nest.CustomBoostFactorQueryDescriptor{`0}})">
            <summary>
            custom_boost_factor query allows to wrap another query and multiply its score by the provided boost_factor.
            This can sometimes be desired since boost value set on specific queries gets normalized, while this 
            query boost factor does not.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.CustomScore(System.Action{Nest.CustomScoreQueryDescriptor{`0}})">
            <summary>
            custom_score query allows to wrap another query and customize the scoring of it optionally with a 
            computation derived from other field values in the doc (numeric ones) using script expression
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.CustomFiltersScore(System.Action{Nest.CustomFiltersScoreDescriptor{`0}})">
            <summary>
            custom_score query allows to wrap another query and customize the scoring of it optionally with a 
            computation derived from other field values in the doc (numeric ones) using script or boost expression
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Bool(System.Action{Nest.BoolQueryDescriptor{`0}})">
            <summary>
            A query that matches documents matching boolean combinations of other queries. The bool query maps to 
            Lucene BooleanQuery. 
            It is built using one or more boolean clauses, each clause with a typed occurrence
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Boosting(System.Action{Nest.BoostingQueryDescriptor{`0}})">
            <summary>
            the boosting query can be used to effectively demote results that match a given query. 
            Unlike the “NOT” clause in bool query, this still selects documents that contain
            undesirable terms, but reduces their overall score.
            </summary>
            <param name="boostingQuery"></param>
        </member>
        <member name="M:Nest.QueryDescriptor`1.MatchAll(System.Nullable{System.Double},System.String)">
            <summary>
            A query that matches all documents. Maps to Lucene MatchAllDocsQuery.
            </summary>
            <param name="NormField">
            When indexing, a boost value can either be associated on the document level, or per field. 
            The match all query does not take boosting into account by default. In order to take 
            boosting into account, the norms_field needs to be provided in order to explicitly specify which
            field the boosting will be done on (Note, this will result in slower execution time).
            </param>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Nullable{System.Double})">
            <summary>
            Matches documents that have fields that contain a term (not analyzed). 
            The term query maps to Lucene TermQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Term(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Nullable{System.Double})">
            <summary>
            Matches documents that have fields that contain a term (not analyzed). 
            The term query maps to Lucene TermQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Term(System.String,System.Object,System.Nullable{System.Double})">
            <summary>
            Matches documents that have fields that contain a term (not analyzed). 
            The term query maps to Lucene TermQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Wildcard(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm})">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed). 
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?, 
            which matches any single character. Note this query can be slow, as it needs to iterate 
            over many terms. In order to prevent extremely slow wildcard queries, a wildcard term should 
            not start with one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Wildcard(System.String,System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm})">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed). 
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms. 
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with 
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Prefix(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm})">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed). 
            The prefix query maps to Lucene PrefixQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Prefix(System.String,System.String,System.Nullable{System.Double},System.Nullable{Nest.RewriteMultiTerm})">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed). 
            The prefix query maps to Lucene PrefixQuery. 
            </summary>	
        </member>
        <member name="M:Nest.QueryDescriptor`1.Ids(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. Note, this filter does not require 
            the _id field to be indexed since it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Ids(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. 
            Note, this filter does not require the _id field to be indexed since
            it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Ids(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. 
            Note, this filter does not require the _id field to be indexed since 
            it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanTerm(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double})">
            <summary>
            Matches spans containing a term. The span term query maps to Lucene SpanTermQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanTerm(System.String,System.String,System.Nullable{System.Double})">
            <summary>
            Matches spans containing a term. The span term query maps to Lucene SpanTermQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanFirst(System.Action{Nest.SpanFirstQueryDescriptor{`0}})">
            <summary>
            Matches spans near the beginning of a field. The span first query maps to Lucene SpanFirstQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanNear(System.Action{Nest.SpanNearQueryDescriptor{`0}})">
            <summary>
            Matches spans which are near one another. One can specify slop, the maximum number of 
            intervening unmatched positions, as well as whether matches are required to be in-order.
            The span near query maps to Lucene SpanNearQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanOr(System.Action{Nest.SpanOrQueryDescriptor{`0}})">
            <summary>
            Matches the union of its span clauses. 
            The span or query maps to Lucene SpanOrQuery. 
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.SpanNot(System.Action{Nest.SpanNotQueryDescriptor{`0}})">
            <summary>
            Removes matches which overlap with another span query. 
            The span not query maps to Lucene SpanNotQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.Regexp(System.Action{Nest.RegexpQueryDescriptor{`0}})">
            <summary>
            custom_score query allows to wrap another query and customize the scoring of it optionally with a 
            computation derived from other field values in the doc (numeric ones) using script or boost expression
            </summary>
        </member>
        <member name="M:Nest.QueryDescriptor`1.FunctionScore(System.Action{Nest.FunctionScoreQueryDescriptor{`0}})">
            <summary>
            Function score query
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BaseFilter.op_BitwiseAnd(Nest.BaseFilter,Nest.BaseFilter)">
            <summary>
            AND's two BaseFilters
            </summary>
            <returns>A new basefilter that represents the AND of the two</returns>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Document(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Exists(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Filters documents where a specific field has a value in them.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Exists(System.String)">
            <summary>
            Filters documents where a specific field has a value in them.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Missing(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Filters documents where a specific field has no value in them.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Missing(System.String)">
            <summary>
            Filters documents where a specific field has no value in them.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Ids(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. 
            Note, this filter does not require the _id field to be indexed since it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Ids(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. 
            Note, this filter does not require the _id field to be indexed since it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Ids(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filters documents that only have the provided ids. 
            Note, this filter does not require the _id field to be indexed since it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoBoundingBox(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.String,System.Nullable{Nest.GeoExecution})">
            <summary>
            A filter allowing to filter hits based on a point location using a bounding box
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoBoundingBox(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Double,System.Double,System.Double,System.Double,System.Nullable{Nest.GeoExecution})">
            <summary>
            A filter allowing to filter hits based on a point location using a bounding box
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoBoundingBox(System.String,System.Double,System.Double,System.Double,System.Double,System.Nullable{Nest.GeoExecution})">
            <summary>
            A filter allowing to filter hits based on a point location using a bounding box
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoBoundingBox(System.String,System.String,System.String,System.Nullable{Nest.GeoExecution})">
            <summary>
            A filter allowing to filter hits based on a point location using a bounding box
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoDistance(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{Nest.GeoDistanceFilterDescriptor})">
            <summary>
            Filters documents that include only hits that exists within a specific distance from a geo point. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoDistance(System.String,System.Action{Nest.GeoDistanceFilterDescriptor})">
            <summary>
            Filters documents that include only hits that exists within a specific distance from a geo point. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoDistanceRange(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{Nest.GeoDistanceRangeFilterDescriptor})">
            <summary>
            Filters documents that exists within a range from a specific point:
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoDistanceRange(System.String,System.Action{Nest.GeoDistanceRangeFilterDescriptor})">
            <summary>
            Filters documents that exists within a range from a specific point:
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoShape(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{Nest.GeoShapeFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoShape(System.String,System.Action{Nest.GeoShapeFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoIndexedShape(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{Nest.GeoIndexedShapeFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoIndexedShape(System.String,System.Action{Nest.GeoIndexedShapeFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoPolygon(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Collections.Generic.IEnumerable{System.Tuple{System.Double,System.Double}})">
            <summary>
            A filter allowing to include hits that only fall within a polygon of points. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoPolygon(System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.Double,System.Double}})">
            <summary>
            A filter allowing to include hits that only fall within a polygon of points. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoPolygon(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String[])">
            <summary>
            A filter allowing to include hits that only fall within a polygon of points. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.GeoPolygon(System.String,System.String[])">
            <summary>
            A filter allowing to include hits that only fall within a polygon of points. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.HasChild``1(System.Action{Nest.HasChildFilterDescriptor{``0}})">
            <summary>
            The has_child filter accepts a query and the child type to run against, 
            and results in parent documents that have child docs matching the query.
            </summary>
            <typeparam name="K">Type of the child</typeparam>
        </member>
        <member name="M:Nest.FilterDescriptor`1.HasParent``1(System.Action{Nest.HasParentFilterDescriptor{``0}})">
            <summary>
            The has_child filter accepts a query and the child type to run against, 
            and results in parent documents that have child docs matching the query.
            </summary>
            <typeparam name="K">Type of the child</typeparam>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Limit(System.Nullable{System.Int32})">
            <summary>
            A limit filter limits the number of documents (per shard) to execute on.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Type(System.String)">
            <summary>
            Filters documents matching the provided document / mapping type. 
            Note, this filter can work even when the _type field is not indexed 
            (using the _uid field).
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Type(System.Type)">
            <summary>
            Filters documents matching the provided document / mapping type. 
            Note, this filter can work even when the _type field is not indexed 
            (using the _uid field).
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.MatchAll">
            <summary>
            A filter that matches on all documents.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.NumericRange(System.Action{Nest.NumericRangeFilterDescriptor{`0}})">
            <summary>
            Filters documents with fields that have values within a certain numeric range. 
            Similar to range filter, except that it works only with numeric values, 
            and the filter execution works differently.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Range(System.Action{Nest.RangeFilterDescriptor{`0}})">
            <summary>
            Filters documents with fields that have terms within a certain range. 
            Similar to range query, except that it acts as a filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Script(System.Action{Nest.ScriptFilterDescriptor})">
            <summary>
            A filter allowing to define scripts as filters. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Prefix(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Filters documents that have fields containing terms with a specified prefix 
            (not analyzed). Similar to phrase query, except that it acts as a filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Prefix(System.String,System.String)">
            <summary>
            Filters documents that have fields containing terms with a specified prefix 
            (not analyzed). Similar to phrase query, except that it acts as a filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Filters documents that have fields that contain a term (not analyzed). 
            Similar to term query, except that it acts as a filter
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Term``1(System.String,``0)">
            <summary>
            Filters documents that have fields that contain a term (not analyzed).
            Similar to term query, except that it acts as a filter
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Terms(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Nest.TermsExecution})">
            <summary>
            Filters documents that have fields that match any of the provided terms (not analyzed). 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Terms(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Nest.TermsExecution})">
            <summary>
            Filters documents that have fields that match any of the provided terms (not analyzed). 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.TermsLookup(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{Nest.TermsLookupFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.TermsLookup(System.String,System.Action{Nest.TermsLookupFilterDescriptor})">
            <summary>
            Filter documents indexed using the geo_shape type.
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.And(System.Func{Nest.FilterDescriptor{`0},Nest.BaseFilter}[])">
            <summary>
            A filter that matches documents using AND boolean operator on other queries. 
            This filter is more performant then bool filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.And(Nest.BaseFilter[])">
            <summary>
            A filter that matches documents using AND boolean operator on other queries. 
            This filter is more performant then bool filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Or(System.Func{Nest.FilterDescriptor{`0},Nest.BaseFilter}[])">
            <summary>
            A filter that matches documents using OR boolean operator on other queries. 
            This filter is more performant then bool filter
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Or(Nest.BaseFilter[])">
            <summary>
            A filter that matches documents using OR boolean operator on other queries. 
            This filter is more performant then bool filter
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Not(System.Func{Nest.FilterDescriptor{`0},Nest.BaseFilter})">
            <summary>
            A filter that filters out matched documents using a query. 
            This filter is more performant then bool filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Bool(System.Action{Nest.BoolFilterDescriptor{`0}})">
            <summary>
            
            A filter that matches documents matching boolean combinations of other queries.
            Similar in concept to Boolean query, except that the clauses are other filters. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Query(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery})">
            <summary>
            Wraps any query to be used as a filter. 
            </summary>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Nested(System.Action{Nest.NestedFilterDescriptor{`0}})">
            <summary>
             A nested filter, works in a similar fashion to the nested query, except used as a filter.
             It follows exactly the same structure, but also allows to cache the results 
             (set _cache to true), and have it named (set the _name value). 
            </summary>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.FilterDescriptor`1.Regexp(System.Action{Nest.RegexpFilterDescriptor{`0}})">
            <summary>
             The regexp filter allows you to use regular expression term queries. 
            </summary>
            <param name="selector"></param>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.FromExclusive">
            <summary>
            Forces the 'From()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.ToExclusive">
            <summary>
            Forces the 'To()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.To(System.Nullable{System.Int32})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.From(System.Nullable{System.Int32})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Greater(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Lower(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.To(System.Nullable{System.Double})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.From(System.Nullable{System.Double})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Greater(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Lower(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.To(System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.From(System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Greater(System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.GreaterOrEquals(System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Lower(System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.LowerOrEquals(System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.To(System.Nullable{System.DateTime},System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.From(System.Nullable{System.DateTime},System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Greater(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.Lower(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MinimumNumberShouldMatch(System.Int32)">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
            <param name="minimumShouldMatches"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MinimumNumberShouldMatch(System.String)">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied. String overload where you can specify percentages
            </summary>
            <param name="minimumShouldMatches"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery}[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(Nest.BaseQuery[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery}[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document. The minimum number of should clauses to match can be set using minimum_number_should_match parameter.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(Nest.BaseQuery[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document. The minimum number of should clauses to match can be set using minimum_number_should_match parameter.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery}[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(Nest.BaseQuery[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.ToExclusive">
            <summary>
            Forces the 'To()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.FromExclusive">
            <summary>
            Forces the 'From()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Boost(System.Double)">
            <summary>
            Boosts the range query by the specified boost factor
            </summary>
            <param name="boost">Boost factor</param>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.To(System.Nullable{System.Int32})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.From(System.Nullable{System.Int32})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Greater(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.GreaterOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Lower(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.LowerOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.To(System.Nullable{System.Double})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.From(System.Nullable{System.Double})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Greater(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.GreaterOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Lower(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.LowerOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.To(System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.From(System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Greater(System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.GreaterOrEquals(System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Lower(System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.LowerOrEquals(System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.To(System.Nullable{System.DateTime},System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.From(System.Nullable{System.DateTime},System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Greater(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.GreaterOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.Lower(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.RangeQueryDescriptor`1.LowerOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="T:Nest.TextPhrasePrefixQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms.
            It allows for prefix matches on the last term in the text.
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="T:Nest.TextPhraseQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms. A PhraseQuery is built by QueryParser for input like "new york".
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="M:Nest.CustomScoreQueryDescriptor`1.Script(System.String)">
            <summary>
            Scripts are cached for faster execution. If the script has parameters that it needs to take into account, it is preferable to use the same script, and provide parameters to it:
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.DSL.Descriptors.SortDescriptor`1.ToggleSort(System.Boolean)">
            <summary>
            Pass true to sort ascending false to sort descending
            </summary>
        </member>
        <member name="M:Nest.DSL.Descriptors.SortGeoDistanceDescriptor`1.ToggleSort(System.Boolean)">
            <summary>
            Pass true to sort ascending false to sort descending
            </summary>
        </member>
        <member name="M:Nest.DSL.Descriptors.SortScriptDescriptor`1.MissingValue(System.String)">
            <summary>
            Value to sort on when the orginal value for the field is missing
            </summary>
        </member>
        <member name="M:Nest.DSL.Descriptors.SortScriptDescriptor`1.ToggleSort(System.Boolean)">
            <summary>
            Pass true to sort ascending false to sort descending
            </summary>
        </member>
        <member name="T:Nest.Lang">
            <summary>
            Scripting Language.
            </summary>
        </member>
        <member name="F:Nest.Lang.mvel">
            <summary>
            Language Mvel.
            </summary>
        </member>
        <member name="F:Nest.Lang.js">
            <summary>
            Language Java Script.
            </summary>
        </member>
        <member name="F:Nest.Lang.groovy">
            <summary>
            Language Groovy
            </summary>
        </member>
        <member name="F:Nest.Lang.python">
            <summary>
            Language Python
            </summary>
        </member>
        <member name="F:Nest.Lang.native">
            <summary>
            Native
            </summary>
        </member>
        <member name="F:Nest.DateRounding.Floor">
            <summary>
            (the default), rounds to the lowest whole unit of this field.
            </summary>
        </member>
        <member name="F:Nest.DateRounding.Ceiling">
            <summary>
            Rounds to the highest whole unit of this field.
            </summary>
        </member>
        <member name="F:Nest.DateRounding.Half_Floor">
            <summary>
             Round to the nearest whole unit of this field. If the given millisecond value is closer to the floor or is exactly halfway, this function behaves like floor. If the millisecond value is closer to the ceiling, this function behaves like ceiling.
            </summary>
        </member>
        <member name="F:Nest.DateRounding.Half_Ceiling">
            <summary>
            Round to the nearest whole unit of this field. If the given millisecond value is closer to the floor, this function behaves like floor. If the millisecond value is closer to the ceiling or is exactly halfway, this function behaves like ceiling.
            </summary>
        </member>
        <member name="F:Nest.DateRounding.Half_Even">
            <summary>
            Round to the nearest whole unit of this field. If the given millisecond value is closer to the floor, this function behaves like floor. If the millisecond value is closer to the ceiling, this function behaves like ceiling. If the millisecond value is exactly halfway between the floor and ceiling, the ceiling is chosen over the floor only if it makes this field’s value even.
            </summary>
        </member>
        <member name="T:Nest.ScriptFilterDescriptor">
            <summary>
            A filter allowing to define scripts as filters.
            Ex: "doc['num1'].value > 1"
            </summary>
        </member>
        <member name="M:Nest.ScriptFilterDescriptor.Script(System.String)">
            <summary>
            Filter script.
            </summary>
            <param name="script">script</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptFilterDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Scripts are compiled and cached for faster execution.
            If the same script can be used, just with different parameters provider,
            it is preferable to use the ability to pass parameters to the script itself.
            Ex:
            	Script: "doc['num1'].value > param1"
            	param: "param1" = 5
            </summary>
            <param name="paramDictionary">param</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptFilterDescriptor.Lang(Nest.Lang)">
            <summary>
            Language of script.
            </summary>
            <param name="lang">language</param>
            <returns>this</returns>
        </member>
        <member name="T:Nest.NumericRangeFilterDescriptor`1">
            <summary>
            Filters documents with fields that have values within a certain numeric range. Similar to range filter, except that it works only with numeric values
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.FromExclusive">
            <summary>
            Forces the 'From()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.ToExclusive">
            <summary>
            Forces the 'To()' to be exclusive (which is inclusive by default).
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.To(System.Nullable{System.Int32})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.From(System.Nullable{System.Int32})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Greater(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Lower(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.Int32})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.To(System.Nullable{System.Double})">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.From(System.Nullable{System.Double})">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Greater(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Lower(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.Double})">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.To(System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.From(System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Greater(System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.GreaterOrEquals(System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Lower(System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.LowerOrEquals(System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.To(System.Nullable{System.DateTime},System.String)">
            <summary>
            The upper bound. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.From(System.Nullable{System.DateTime},System.String)">
            <summary>
            The lower bound. Defaults to start from the first.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Greater(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.GreaterOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting from and include_lower to true.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.Lower(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to false.
            </summary>
        </member>
        <member name="M:Nest.NumericRangeFilterDescriptor`1.LowerOrEquals(System.Nullable{System.DateTime},System.String)">
            <summary>
            Same as setting to and include_upper to true.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Indices(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The indices to execute the search on. Defaults to the default index
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Index(System.String)">
            <summary>
            The index to execute the search on. Defaults to the default index
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Types(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The types to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Types(System.String[])">
            <summary>
            The types to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Types(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            The types to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Types(System.Type[])">
            <summary>
            The types to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type(System.String)">
            <summary>
            The type to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type(System.Type)">
            <summary>
            The type to execute the search on. Defaults to the inferred typename of T 
            unless T is dynamic then a type (or AllTypes()) MUST be specified.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllIndices">
            <summary>
            Execute search over all indices
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllTypes">
            <summary>
            Execute search over all types
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Routing(System.String)">
            <summary>
            When executing a search, it will be broadcasted to all the index/indices shards (round robin between replicas).
            Which shards will be searched on can be controlled by providing the routing parameter.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SearchType(Nest.SearchType)">
            <summary>
            controls how the distributed search behaves. http://www.elasticsearch.org/guide/reference/api/search/search-type.html
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Scroll(System.String)">
            <summary>
            A search request can be scrolled by specifying the scroll parameter. The scroll parameter is a time value parameter (for example: scroll=5m), indicating for how long the nodes that participate in the search will maintain relevant resources in order to continue and support it. This is very similar in its idea to opening a cursor against a database.
            </summary>
            <param name="scrollTime">The scroll parameter is a time value parameter (for example: scroll=5m)</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Nest.SearchDescriptor`1.Strict(System.Boolean)" -->
        <member name="M:Nest.SearchDescriptor`1.Size(System.Int32)">
            <summary>
            The number of hits to return. Defaults to 10. When using scroll search type 
            size is actually multiplied by the number of shards!
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Take(System.Int32)">
            <summary>
            The number of hits to return. Defaults to 10.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.From(System.Int32)">
            <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Skip(System.Int32)">
            <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Timeout(System.String)">
            <summary>
            A search timeout, bounding the search request to be executed within the 
            specified time value and bail with the hits accumulated up
            to that point when expired. Defaults to no timeout.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Explain(System.Boolean)">
            <summary>
            Enables explanation for each hit on how its score was computed. 
            (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Version(System.Boolean)">
            <summary>
            Returns a version for each search hit. (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TrackScores(System.Boolean)">
            <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MinScore(System.Double)">
            <summary>
            Allows to filter out documents based on a minimum score:
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Preference(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Custom (string) value: A custom value will be used to guarantee that the same shards
            will be used for the same custom value. This can help with “jumping values” 
            when hitting different shards in different refresh states. 
            A sample value can be something like the web session id, or the user name.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimary">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed only on the primary shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimaryFirst">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed on the primary shard, and if not available (failover), 
            will execute on other shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnLocalShard">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will prefer to be executed on a local allocated shard is possible.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Restricts the search to execute only on a node with the provided node id
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPreferredNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on. 
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Prefers execution on the node with the provided node id if applicable.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.IndicesBoost(System.Func{Nest.FluentDictionary{System.String,System.Double},Nest.FluentDictionary{System.String,System.Double}})">
            <summary>
            Allows to configure different boost level per index when searching across 
            more than one indices. This is very handy when hits coming from one index
            matter more than hits coming from another index (think social graph where each user has an index).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Fields(System.String[])">
            <summary>
            Allows to selectively load specific fields for each document 
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortAscending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            <para>Allows to add one or more sort on specific fields. Each sort can be reversed as well.
            The sort is defined on a per field level, with special field name for _score to sort by score.
            </para>
            <para>
            Sort ascending.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            <para>Allows to add one or more sort on specific fields. Each sort can be reversed as well.
            The sort is defined on a per field level, with special field name for _score to sort by score.
            </para>
            <para>
            Sort descending.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortAscending(System.String)">
            <summary>
            <para>Allows to add one or more sort on specific fields. Each sort can be reversed as well.
            The sort is defined on a per field level, with special field name for _score to sort by score.
            </para>
            <para>
            Sort ascending.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortDescending(System.String)">
            <summary>
            <para>Allows to add one or more sort on specific fields. Each sort can be reversed as well.
            The sort is defined on a per field level, with special field name for _score to sort by score.
            </para>
            <para>
            Sort descending.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Sort(System.Func{Nest.DSL.Descriptors.SortDescriptor{`0},Nest.DSL.Descriptors.SortDescriptor{`0}})">
            <summary>
            <para>Sort() allows you to fully describe your sort unlike the SortAscending and SortDescending aliases.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortGeoDistance(System.Func{Nest.DSL.Descriptors.SortGeoDistanceDescriptor{`0},Nest.DSL.Descriptors.SortGeoDistanceDescriptor{`0}})">
            <summary>
            <para>SortGeoDistance() allows you to sort by a distance from a geo point.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SortScript(System.Func{Nest.DSL.Descriptors.SortScriptDescriptor{`0},Nest.DSL.Descriptors.SortScriptDescriptor{`0}})">
            <summary>
            <para>SortScript() allows you to sort by a distance from a geo point.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetTerm(System.String,System.Func{Nest.TermFacetDescriptor{`0},Nest.TermFacetDescriptor{`0}})">
            <summary>
            Allow to specify field facets that return the N most frequent terms.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetTerm(System.Func{Nest.TermFacetDescriptor{`0},Nest.TermFacetDescriptor{`0}},System.String)">
            <summary>
            Allow to specify field facets that return the N most frequent terms.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetRange``1(System.String,System.Func{Nest.RangeFacetDescriptor{`0,``0},Nest.RangeFacetDescriptor{`0,``0}})">
            <summary>
            range facet allow to specify a set of ranges and get both the number of docs (count) 
            that fall within each range, and aggregated data either based on the field, or using another field
            </summary>
            <typeparam name="K">struct, (int, double, string, DateTime)</typeparam>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetRange``1(System.Func{Nest.RangeFacetDescriptor{`0,``0},Nest.RangeFacetDescriptor{`0,``0}},System.String)">
            <summary>
            range facet allow to specify a set of ranges and get both the number of docs (count) 
            that fall within each range, and aggregated data either based on the field, or using another field
            </summary>
            <typeparam name="K">struct, (int, double, string, DateTime)</typeparam>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetHistogram(System.String,System.Func{Nest.HistogramFacetDescriptor{`0},Nest.HistogramFacetDescriptor{`0}})">
            <summary>
            The histogram facet works with numeric data by building a histogram across intervals 
            of the field values. Each value is “rounded” into an interval (or placed in a bucket), 
            and statistics are provided per interval/bucket (count and total). 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetHistogram(System.Func{Nest.HistogramFacetDescriptor{`0},Nest.HistogramFacetDescriptor{`0}},System.String)">
            <summary>
            The histogram facet works with numeric data by building a histogram across intervals 
            of the field values. Each value is “rounded” into an interval (or placed in a bucket), 
            and statistics are provided per interval/bucket (count and total). 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetDateHistogram(System.String,System.Func{Nest.DateHistogramFacetDescriptor{`0},Nest.DateHistogramFacetDescriptor{`0}})">
            <summary>
            A specific histogram facet that can work with date field types enhancing it over the regular histogram facet.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetDateHistogram(System.Func{Nest.DateHistogramFacetDescriptor{`0},Nest.DateHistogramFacetDescriptor{`0}},System.String)">
            <summary>
            A specific histogram facet that can work with date field types enhancing it over the regular histogram facet.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetStatistical(System.String,System.Func{Nest.StatisticalFacetDescriptor{`0},Nest.StatisticalFacetDescriptor{`0}})">
            <summary>
            Statistical facet allows to compute statistical data on a numeric fields. 
            The statistical data include count, total, sum of squares, 
            mean (average), minimum, maximum, variance, and standard deviation. 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetStatistical(System.Func{Nest.StatisticalFacetDescriptor{`0},Nest.StatisticalFacetDescriptor{`0}},System.String)">
            <summary>
            Statistical facet allows to compute statistical data on a numeric fields. 
            The statistical data include count, total, sum of squares, 
            mean (average), minimum, maximum, variance, and standard deviation. 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetTermsStats(System.String,System.Func{Nest.TermsStatsFacetDescriptor{`0},Nest.TermsStatsFacetDescriptor{`0}})">
            <summary>
            The terms_stats facet combines both the terms and statistical allowing 
            to compute stats computed on a field, per term value driven by another field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetTermsStats(System.Func{Nest.TermsStatsFacetDescriptor{`0},Nest.TermsStatsFacetDescriptor{`0}},System.String)">
            <summary>
            The terms_stats facet combines both the terms and statistical allowing 
            to compute stats computed on a field, per term value driven by another field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetGeoDistance(System.String,System.Func{Nest.GeoDistanceFacetDescriptor{`0},Nest.GeoDistanceFacetDescriptor{`0}})">
            <summary>
            The geo_distance facet is a facet providing information for ranges of distances
            from a provided geo_point including count of the number of hits that fall 
            within each range, and aggregation information (like total).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetGeoDistance(System.Func{Nest.GeoDistanceFacetDescriptor{`0},Nest.GeoDistanceFacetDescriptor{`0}},System.String)">
            <summary>
            The geo_distance facet is a facet providing information for ranges of distances
            from a provided geo_point including count of the number of hits that fall 
            within each range, and aggregation information (like total).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetQuery(System.String,System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery},System.Nullable{System.Boolean})">
            <summary>
            A facet query allows to return a count of the hits matching 
            the facet query. The query itself can be expressed using the Query DSL.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FacetFilter(System.String,System.Func{Nest.FilterDescriptor{`0},Nest.BaseFilter})">
            <summary>
            A filter facet (not to be confused with a facet filter) allows you to return a count of the h
            its matching the filter. The filter itself can be expressed using the Query DSL.
            Note, filter facet filters are faster than query facet when using native filters (non query wrapper ones).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestGlobalText(System.String)">
            <summary>
            To avoid repetition of the suggest text, it is possible to define a global text.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestTerm(System.String,System.Func{Nest.TermSuggestDescriptor{`0},Nest.TermSuggestDescriptor{`0}})">
            <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested. 
            The suggested terms are provided per analyzed suggest text token. The term suggester doesn’t take the query into account that is part of request.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestPhrase(System.String,System.Func{Nest.PhraseSuggestDescriptor{`0},Nest.PhraseSuggestDescriptor{`0}})">
            <summary>
            The phrase suggester adds additional logic on top of the term suggester to select entire corrected phrases 
            instead of individual tokens weighted based on ngram-langugage models. 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestCompletion(System.String,System.Func{Nest.CompletionSuggestDescriptor{`0},Nest.CompletionSuggestDescriptor{`0}})">
            <summary>
            The completion suggester is a so-called prefix suggester. 
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Query(System.Func{Nest.QueryDescriptor{`0},Nest.BaseQuery})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Query(Nest.BaseQuery)">
            <summary>
            Describe the query to perform using the static Query class
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.QueryString(System.String)">
            <summary>
            Shortcut to .Query(q=>q.QueryString(qs=>qs.Query("string"))
            Does a match_all if the userInput string is null or empty;
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.QueryRaw(System.String)">
            <summary>
            Describe the query to perform as a raw json string
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Filter(System.Func{Nest.FilterDescriptor{`0},Nest.BaseFilter})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Filter(Nest.BaseFilter)">
            <summary>
            Filter search
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FilterRaw(System.String)">
            <summary>
            Filter search using a raw json string
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Highlight(System.Action{Nest.HighlightDescriptor{`0}})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter. 
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Rescore(System.Action{Nest.DSL.Descriptors.RescoreDescriptor{`0}})">
            <summary>
            Allows you to specify a rescore query
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MatchAll">
            <summary>
            Shorthand for a match_all query without having to specify .Query(q=>q.MatchAll())
            </summary>
        </member>
        <member name="P:Nest.SearchDescriptor`1._Strict">
            <summary>
            Whether conditionless queries are allowed or not
            </summary>
        </member>
        <member name="F:Nest.ConnectionErrorType.Uncaught">
            <summary>
            The error was due to an uncaught exception in the client code
            </summary>
        </member>
        <member name="F:Nest.ConnectionErrorType.Server">
            <summary>
            The error was due to an error thrown by Elasticsearch
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettings.EnableTrace(System.Boolean)">
            <summary>
            Enable Trace signals to the IConnection that it should put debug information on the Trace.
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettings.SetJsonSerializerSettingsModifier(System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            Allows you to update internal the json.net serializer settings to your liking
            </summary>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.AddContractJsonConverters(System.Func{System.Type,Newtonsoft.Json.JsonConverter}[])">
            <summary>
            Add a custom JsonConverter to the build in json serialization by passing in a predicate for a type.
            This is faster then adding them using AddJsonConverters() because this way they will be part of the cached 
            Json.net contract for a type.
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettings.SetGlobalQueryStringParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            This NameValueCollection will be appended to every url NEST calls, great if you need to pass i.e an API key.
            </summary>
            <param name="queryStringParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.SetTimeout(System.Int32)">
            <summary>
            Timeout in milliseconds when the .NET webrquest should abort the request, note that you can set this to a high value here,
            and specify the timeout in various calls on Elasticsearch's side.
            </summary>
            <param name="timeout">time out in milliseconds</param>
        </member>
        <member name="M:Nest.ConnectionSettings.SetDefaultIndex(System.String)">
            <summary>
            Index to default to when no index is specified.
            </summary>
            <param name="defaultIndex">When null/empty/not set might throw NRE later on
            when not specifying index explicitly while indexing.
            </param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.SetMaximumAsyncConnections(System.Int32)">
            <summary>
            Semaphore asynchronous connections automatically by giving
            it a maximum concurrent connections. Great to prevent 
            out of memory exceptions
            </summary>
            <param name="maximum">defaults to 20</param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.SetProxy(System.Uri,System.String,System.String)">
            <summary>
            If your connection has to go through proxy use this method to specify the proxy url
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.UsePrettyResponses(System.Boolean)">
            <summary>
            Append ?pretty=true to requests, this helps to debug send and received json.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.SetDontDoubleEscapePathDotsAndSlashes(System.Boolean)">
            <summary>
            Append ?pretty=true to requests, this helps to debug send and received json.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettings.SetDefaultPropertyNameInferrer(System.Func{System.String,System.String})">
            <summary>
            By default NEST camelCases property names (EmailAddress => emailAddress) that do not have an explicit propertyname 
            either via an ElasticProperty attribute or because they are part of Dictionary where the keys should be treated verbatim.
            <pre>
            Here you can register a function that transforms propertynames (default casing, pre- or suffixing)
            </pre>
            </summary>
        </member>
        <member name="M:Nest.ConnectionStatus.Deserialize``1(System.Boolean)">
            <summary>
            Returns a response of type R based on the connection status by trying parsing status.Result into R
            </summary>
            <returns></returns>
        </member>
        <member name="P:Nest.ElasticPropertyAttribute.NumericType">
            <summary>
            Defaults to float so be sure to set this correctly!
            </summary>
        </member>
        <member name="P:Nest.ElasticPropertyAttribute.DateFormat">
            <summary>
            http://www.elasticsearch.org/guide/reference/mapping/date-format.html
            </summary>
        </member>
        <member name="T:Nest.ElasticMap">
            <summary>
            Static helper to help create resusable RootObjectMappings
            </summary>
        </member>
        <member name="T:Nest.GenericMapping">
            <summary>
            Sometimes you need a generic type mapping, i.e when using dynamic templates 
            in order to specify "{dynamic_template}" the type, or if you have some plugin that exposes a new type.
            </summary>
        </member>
        <member name="P:Nest.GenericMapping.IndexName">
            <summary>
            The name of the field that will be stored in the index. Defaults to the property/field name.
            </summary>
        </member>
        <member name="P:Nest.IndexParameters.Timeout">
            <summary>
            string because you can pass 5m, or 1h to ES
            </summary>
        </member>
        <member name="P:Nest.QueryResponse`1.ScrollId">
            <summary>
            Only set when search type = scan and scroll specified
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Nest.QueryResponse`1.Highlights" -->
        <member name="T:Nest.CustomAnalyzer">
            <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters, and zero or more Char Filters. 
            <para>The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of logical/registered names of token filters.</para>
            </summary>
        </member>
        <member name="T:Nest.IndexSettings">
            <summary>
            Writing these uses a custom converter that ignores the json props
            </summary>
        </member>
        <member name="T:Nest.SnowballAnalyzer">
            <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para> The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from snowball.tartarus.org.</para>
            </summary>
        </member>
        <member name="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)">
            <summary>
            This extension method should only be used in expressions which are analysed by Nest.
            When analysed it will append <paramref name="suffix"/> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
        </member>
        <member name="T:Nest.DictionaryKeysAreNotPropertyNamesJsonConverter">
            <summary>
            JSON converter for IDictionary that ignores the contract resolver (e.g. CamelCasePropertyNamesContractResolver)
            when converting dictionary keys to property names.
            </summary>
        </member>
        <member name="T:Nest.ShingleTokenFilter">
            <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream. 
            <para>In other words, it creates combinations of tokens as a single token. </para>
            </summary>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MinShingleSize">
            <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MaxShingleSize">
            <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigrams">
            <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigramsIfNoShingles">
            <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available. 
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para>
            </summary>
        </member>
        <member name="P:Nest.ShingleTokenFilter.TokenSeparator">
            <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
        </member>
        <member name="M:Nest.Resolvers.PathResolver.GetWarmerPath(Nest.GetWarmerDescriptor)">
            <summary>
            For GetWarmer and DeleteWarmer operations
            </summary>
        </member>
        <member name="T:Nest.Resolvers.ExpressionVisitor">
            <summary>
            This comes from Matt Warren's sample:
            http://blogs.msdn.com/mattwar/archive/2007/07/31/linq-building-an-iqueryable-provider-part-ii.aspx
            </summary>
        </member>
        <member name="T:Nest.Resolvers.Inflector">
            <summary>
            Pluralizes or singularizes words.
            </summary>
        </member>
        <member name="M:Nest.Resolvers.Inflector.#cctor">
            <summary>
            Initializes the <see cref="T:Nest.Resolvers.Inflector"/> class.
            </summary>
        </member>
        <member name="M:Nest.Resolvers.Inflector.AddIrregularRule(System.String,System.String)">
            <summary>
            Adds the irregular rule.
            </summary>
            <param name="singular">The singular.</param>
            <param name="plural">The plural.</param>
        </member>
        <member name="M:Nest.Resolvers.Inflector.AddUnknownCountRule(System.String)">
            <summary>
            Adds the unknown count rule.
            </summary>
            <param name="word">The word.</param>
        </member>
        <member name="M:Nest.Resolvers.Inflector.AddPluralRule(System.String,System.String)">
            <summary>
            Adds the plural rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Resolvers.Inflector.AddSingularRule(System.String,System.String)">
            <summary>
            Adds the singular rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Resolvers.Inflector.MakePlural(System.String)">
            <summary>
            Makes the plural.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Resolvers.Inflector.MakeSingular(System.String)">
            <summary>
            Makes the singular.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Resolvers.Inflector.ApplyRules(System.Collections.Generic.IList{Nest.Resolvers.Inflector.InflectorRule},System.String)">
            <summary>
            Applies the rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.Resolvers.Inflector.InflectorRule">
            <summary>
            Summary for the InflectorRule class
            </summary>
        </member>
        <member name="M:Nest.Resolvers.Inflector.InflectorRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nest.Resolvers.Inflector.InflectorRule"/> class.
            </summary>
            <param name="regexPattern">The regex pattern.</param>
            <param name="replacementText">The replacement text.</param>
        </member>
        <member name="M:Nest.Resolvers.Inflector.InflectorRule.Apply(System.String)">
            <summary>
            Applies the tule to the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="P:Nest.Resolvers.ElasticContractResolver.ConnectionSettings">
            <summary>
            ConnectionSettings can be requested by JsonConverter's.
            </summary>
        </member>
        <member name="P:Nest.Resolvers.ElasticContractResolver.PiggyBackState">
            <summary>
            Signals to custom converter that it can get serialization state from one of the converters
            Ugly but massive performance gain
            </summary>
        </member>
        <member name="T:Nest.FieldType">
            <summary>
            Define the type of field content.
            </summary>
        </member>
        <member name="F:Nest.FieldType.none">
            <summary>
            Default. Will be defined by the type of property return.
            </summary>
        </member>
        <member name="F:Nest.FieldType.geo_point">
            <summary>
            Geo based points.
            </summary>
        </member>
        <member name="F:Nest.FieldType.attachment">
            <summary>
            The attachment type allows to index different “attachment” type field (encoded as base64), for example, microsoft office formats, open document formats, ePub, HTML...
            </summary>
        </member>
        <member name="F:Nest.FieldType.ip">
            <summary>
            An ip mapping type allows to store ipv4 addresses in a numeric form allowing to easily sort, and range query it (using ip values).
            </summary>
        </member>
        <member name="F:Nest.FieldType.binary">
            <summary>
            The binary type is a base64 representation of binary data that can be stored in the index.
            </summary>
        </member>
        <member name="F:Nest.FieldType.string_type">
            <summary>
            Text based string type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.integer_type">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.long_type">
            <summary>
            Long type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.float_type">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.double_type">
            <summary>
            Double type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.date_type">
            <summary>
            Date type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.boolean_type">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.nested">
            <summary>
            Nested type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.completion">
            <summary>
            Completion type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.object">
            <summary>
            object type, no need to set this manually if its not a value type this will be set.
            Only set this if you need to force a value type to be mapped to an elasticsearch object type.
            </summary>
        </member>
        <member name="M:Nest.Resolvers.Writers.TypeMappingWriter.#ctor(System.Type,System.String,Nest.IConnectionSettings,System.Int32,System.Collections.Concurrent.ConcurrentDictionary{System.Type,System.Int32})">
            <summary>
            internal constructor by TypeMappingWriter itself when it recurses, passes seenTypes as safeguard agains maxRecursion
            </summary>
        </member>
        <member name="M:Nest.Resolvers.Writers.TypeMappingWriter.GetElasticSearchType(Nest.IElasticPropertyAttribute,System.Reflection.PropertyInfo)">
            <summary>
            Get the Elastic Search Field Type Related.
            </summary>
            <param name="att">ElasticPropertyAttribute</param>
            <param name="p">Property Field</param>
            <returns>String with the type name or null if can not be inferres</returns>
        </member>
        <member name="M:Nest.Resolvers.Writers.TypeMappingWriter.GetElasticSearchTypeFromFieldType(System.Nullable{Nest.FieldType})">
            <summary>
            Get the Elastic Search Field from a FieldType.
            </summary>
            <param name="fieldType">FieldType</param>
            <returns>String with the type name or null if can not be inferres</returns>
        </member>
        <member name="M:Nest.Resolvers.Writers.TypeMappingWriter.GetFieldTypeFromType(System.Type)">
            <summary>
            Inferes the FieldType from the type of the property.
            </summary>
            <param name="propertyType">Type of the property</param>
            <returns>FieldType or null if can not be inferred</returns>
        </member>
        <member name="T:Nest.StandardAnalyzer">
            <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.StandardAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.StandardAnalyzer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.StopTokenFilter">
            <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
        </member>
        <member name="T:Nest.WordDelimiterTokenFilter">
            <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            </summary>
        </member>
    </members>
</doc>
